ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/Dropbox/Work/Studies/Analysis of Rt data/PI probabalistic index/Training and testing for PI/Measures/One to three MTS 0.4/MTS - OtM 3x3.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/Dropbox/Work/Studies/Analysis of Rt data/PI probabalistic index/Training and testing for PI/Measures/One to three MTS 0.4/data/_MTS - OtM 3x3_2016_Apr_15_1504
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'MTS - OtM 3x3'
p12
sS'dataNames'
p13
(lp14
S'response.keys'
p15
aS'response.corr'
p16
aS'response.rt'
p17
asS'autoLog'
p18
I01
sS'extraInfo'
p19
(dp20
Vparticipant
p21
V
sVgender
p22
V
sVage
p23
V
sS'frameRate'
p24
cnumpy.core.multiarray
scalar
p25
(cnumpy
dtype
p26
(S'f8'
I0
I1
tRp27
(I3
S'<'
NNNI-1
I-1
I0
tbS'l<\x9dq(\xe9M@'
tRp28
sS'expName'
p29
g12
sS'date'
p30
V2016_Apr_15_1504
p31
ssS'loopsUnfinished'
p32
(lp33
sS'saveWideText'
p34
I01
sS'thisEntry'
p35
(dp36
sS'version'
p37
S''
sS'_paramNamesSoFar'
p38
(lp39
Vc1_exemplar
p40
aVb1_exemplar
p41
aVa1_exemplar
p42
aVc2_exemplar
p43
aVc3_exemplar
p44
aVa2_exemplar
p45
aVmastery_criterion
p46
aVb3_exemplar
p47
aVa3_exemplar
p48
aVb2_exemplar
p49
aVtarget_category_required
p50
aVsample_category
p51
aVtarget_category_wrong_2
p52
aVrequired_response
p53
aVtarget_category_wrong_1
p54
aVtrial_description
p55
asS'entries'
p56
(lp57
(dp58
g51
Va2
p59
sg50
Vc2
p60
sg24
g28
sg30
g31
sg53
Vleft
p61
sg47
VB3
p62
sg52
Vc3
p63
sg54
Vc1
p64
sg49
VB2
p65
sg40
VC1
p66
sg42
VA1
p67
sg21
V
sS'blocks_loop.thisRepN'
p68
I0
sg16
I1
sS'trials_loop.thisRepN'
p69
I0
sS'blocks_loop.thisIndex'
p70
g25
(g26
(S'i4'
I0
I1
tRp71
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp72
sg17
F1.474513053894043
sg55
Vac
p73
sg41
VB1
p74
sg29
g12
sg15
S'left'
p75
sg43
VC2
p76
sg44
VC3
p77
sS'trials_loop.thisN'
p78
I0
sg46
I15
sg48
VA3
p79
sS'trials_loop.thisIndex'
p80
g25
(g71
S'\x0c\x00\x00\x00'
tRp81
sg22
V
sg23
V
sS'blocks_loop.thisN'
p82
I0
sS'blocks_loop.thisTrialN'
p83
I0
sS'trials_loop.thisTrialN'
p84
I0
sg45
VA2
p85
sa(dp86
g51
Va1
p87
sg50
g64
sg24
g28
sg30
g31
sg53
Vdown
p88
sg47
g62
sg52
g63
sg54
g60
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p89
I0
sg16
I1
sS'trials_loop.thisRepN'
p90
I0
sS'blocks_loop.thisIndex'
p91
g72
sg17
F0.52051782608032227
sg55
g73
sg41
g74
sg29
g12
sg15
S'down'
p92
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p93
I1
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p94
g25
(g71
S'\x0b\x00\x00\x00'
tRp95
sg22
V
sg23
V
sS'blocks_loop.thisN'
p96
I0
sS'blocks_loop.thisTrialN'
p97
I0
sS'trials_loop.thisTrialN'
p98
I1
sg45
g85
sa(dp99
g51
g87
sg50
Vb1
p100
sg24
g28
sg30
g31
sg53
g61
sg47
g62
sg52
Vb3
p101
sg54
Vb2
p102
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p103
I0
sg16
I1
sS'trials_loop.thisRepN'
p104
I0
sS'blocks_loop.thisIndex'
p105
g72
sg17
F0.46926403045654297
sg55
Vab
p106
sg41
g74
sg29
g12
sg15
S'left'
p107
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p108
I2
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p109
g25
(g71
S'\x00\x00\x00\x00'
tRp110
sg22
V
sg23
V
sS'blocks_loop.thisN'
p111
I0
sS'blocks_loop.thisTrialN'
p112
I0
sS'trials_loop.thisTrialN'
p113
I2
sg45
g85
sa(dp114
g51
g87
sg50
g64
sg24
g28
sg30
g31
sg53
g61
sg47
g62
sg52
g63
sg54
g60
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p115
I0
sg16
I1
sS'trials_loop.thisRepN'
p116
I0
sS'blocks_loop.thisIndex'
p117
g72
sg17
F0.53601288795471191
sg55
g73
sg41
g74
sg29
g12
sg15
S'left'
p118
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p119
I3
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p120
g25
(g71
S'\t\x00\x00\x00'
tRp121
sg22
V
sg23
V
sS'blocks_loop.thisN'
p122
I0
sS'blocks_loop.thisTrialN'
p123
I0
sS'trials_loop.thisTrialN'
p124
I3
sg45
g85
sa(dp125
g51
g59
sg50
g102
sg24
g28
sg30
g31
sg53
g61
sg47
g62
sg52
g101
sg54
g100
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p126
I0
sg16
I1
sS'trials_loop.thisRepN'
p127
I0
sS'blocks_loop.thisIndex'
p128
g72
sg17
F0.72176814079284668
sg55
g106
sg41
g74
sg29
g12
sg15
S'left'
p129
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p130
I4
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p131
g25
(g71
S'\x03\x00\x00\x00'
tRp132
sg22
V
sg23
V
sS'blocks_loop.thisN'
p133
I0
sS'blocks_loop.thisTrialN'
p134
I0
sS'trials_loop.thisTrialN'
p135
I4
sg45
g85
sa(dp136
g51
Va3
p137
sg50
g101
sg24
g28
sg30
g31
sg53
g61
sg47
g62
sg52
g102
sg54
g100
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p138
I0
sg16
I1
sS'trials_loop.thisRepN'
p139
I0
sS'blocks_loop.thisIndex'
p140
g72
sg17
F0.65468907356262207
sg55
g106
sg41
g74
sg29
g12
sg15
S'left'
p141
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p142
I5
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p143
g25
(g71
S'\x06\x00\x00\x00'
tRp144
sg22
V
sg23
V
sS'blocks_loop.thisN'
p145
I0
sS'blocks_loop.thisTrialN'
p146
I0
sS'trials_loop.thisTrialN'
p147
I5
sg45
g85
sa(dp148
g51
g137
sg50
g101
sg24
g28
sg30
g31
sg53
g88
sg47
g62
sg52
g102
sg54
g100
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p149
I0
sg16
I1
sS'trials_loop.thisRepN'
p150
I0
sS'blocks_loop.thisIndex'
p151
g72
sg17
F0.65384697914123535
sg55
g106
sg41
g74
sg29
g12
sg15
S'down'
p152
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p153
I6
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p154
g25
(g71
S'\x08\x00\x00\x00'
tRp155
sg22
V
sg23
V
sS'blocks_loop.thisN'
p156
I0
sS'blocks_loop.thisTrialN'
p157
I0
sS'trials_loop.thisTrialN'
p158
I6
sg45
g85
sa(dp159
g51
g59
sg50
g102
sg24
g28
sg30
g31
sg53
Vright
p160
sg47
g62
sg52
g101
sg54
g100
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p161
I0
sg16
I1
sS'trials_loop.thisRepN'
p162
I0
sS'blocks_loop.thisIndex'
p163
g72
sg17
F0.6213991641998291
sg55
g106
sg41
g74
sg29
g12
sg15
S'right'
p164
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p165
I7
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p166
g25
(g71
S'\x04\x00\x00\x00'
tRp167
sg22
V
sg23
V
sS'blocks_loop.thisN'
p168
I0
sS'blocks_loop.thisTrialN'
p169
I0
sS'trials_loop.thisTrialN'
p170
I7
sg45
g85
sa(dp171
g51
g137
sg50
g63
sg24
g28
sg30
g31
sg53
g160
sg47
g62
sg52
g60
sg54
g64
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p172
I0
sg16
I1
sS'trials_loop.thisRepN'
p173
I0
sS'blocks_loop.thisIndex'
p174
g72
sg17
F0.80483889579772949
sg55
g73
sg41
g74
sg29
g12
sg15
S'right'
p175
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p176
I8
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p177
g25
(g71
S'\x10\x00\x00\x00'
tRp178
sg22
V
sg23
V
sS'blocks_loop.thisN'
p179
I0
sS'blocks_loop.thisTrialN'
p180
I0
sS'trials_loop.thisTrialN'
p181
I8
sg45
g85
sa(dp182
g51
g87
sg50
g100
sg24
g28
sg30
g31
sg53
g88
sg47
g62
sg52
g101
sg54
g102
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p183
I0
sg16
I1
sS'trials_loop.thisRepN'
p184
I0
sS'blocks_loop.thisIndex'
p185
g72
sg17
F0.53698992729187012
sg55
g106
sg41
g74
sg29
g12
sg15
S'down'
p186
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p187
I9
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p188
g25
(g71
S'\x02\x00\x00\x00'
tRp189
sg22
V
sg23
V
sS'blocks_loop.thisN'
p190
I0
sS'blocks_loop.thisTrialN'
p191
I0
sS'trials_loop.thisTrialN'
p192
I9
sg45
g85
sa(dp193
g51
g59
sg50
g60
sg24
g28
sg30
g31
sg53
g160
sg47
g62
sg52
g63
sg54
g64
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p194
I0
sg16
I1
sS'trials_loop.thisRepN'
p195
I0
sS'blocks_loop.thisIndex'
p196
g72
sg17
F0.65364408493041992
sg55
g73
sg41
g74
sg29
g12
sg15
S'right'
p197
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p198
I10
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p199
g25
(g71
S'\r\x00\x00\x00'
tRp200
sg22
V
sg23
V
sS'blocks_loop.thisN'
p201
I0
sS'blocks_loop.thisTrialN'
p202
I0
sS'trials_loop.thisTrialN'
p203
I10
sg45
g85
sa(dp204
g51
g59
sg50
g60
sg24
g28
sg30
g31
sg53
g88
sg47
g62
sg52
g63
sg54
g64
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p205
I0
sg16
I1
sS'trials_loop.thisRepN'
p206
I0
sS'blocks_loop.thisIndex'
p207
g72
sg17
F0.60423398017883301
sg55
g73
sg41
g74
sg29
g12
sg15
S'down'
p208
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p209
I11
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p210
g25
(g71
S'\x0e\x00\x00\x00'
tRp211
sg22
V
sg23
V
sS'blocks_loop.thisN'
p212
I0
sS'blocks_loop.thisTrialN'
p213
I0
sS'trials_loop.thisTrialN'
p214
I11
sg45
g85
sa(dp215
g51
g137
sg50
g101
sg24
g28
sg30
g31
sg53
g160
sg47
g62
sg52
g102
sg54
g100
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p216
I0
sg16
I1
sS'trials_loop.thisRepN'
p217
I0
sS'blocks_loop.thisIndex'
p218
g72
sg17
F0.58710908889770508
sg55
g106
sg41
g74
sg29
g12
sg15
S'right'
p219
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p220
I12
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p221
g25
(g71
S'\x07\x00\x00\x00'
tRp222
sg22
V
sg23
V
sS'blocks_loop.thisN'
p223
I0
sS'blocks_loop.thisTrialN'
p224
I0
sS'trials_loop.thisTrialN'
p225
I12
sg45
g85
sa(dp226
g51
g137
sg50
g63
sg24
g28
sg30
g31
sg53
g88
sg47
g62
sg52
g60
sg54
g64
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p227
I0
sg16
I1
sS'trials_loop.thisRepN'
p228
I0
sS'blocks_loop.thisIndex'
p229
g72
sg17
F0.55300617218017578
sg55
g73
sg41
g74
sg29
g12
sg15
S'down'
p230
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p231
I13
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p232
g25
(g71
S'\x11\x00\x00\x00'
tRp233
sg22
V
sg23
V
sS'blocks_loop.thisN'
p234
I0
sS'blocks_loop.thisTrialN'
p235
I0
sS'trials_loop.thisTrialN'
p236
I13
sg45
g85
sa(dp237
g51
g87
sg50
g64
sg24
g28
sg30
g31
sg53
g160
sg47
g62
sg52
g63
sg54
g60
sg49
g65
sg40
g66
sg42
g67
sg21
V
sS'blocks_loop.thisRepN'
p238
I0
sg16
I1
sS'trials_loop.thisRepN'
p239
I0
sS'blocks_loop.thisIndex'
p240
g72
sg17
F0.60439014434814453
sg55
g73
sg41
g74
sg29
g12
sg15
S'right'
p241
sg43
g76
sg44
g77
sS'trials_loop.thisN'
p242
I14
sg46
I15
sg48
g79
sS'trials_loop.thisIndex'
p243
g25
(g71
S'\n\x00\x00\x00'
tRp244
sg22
V
sg23
V
sS'blocks_loop.thisN'
p245
I0
sS'blocks_loop.thisTrialN'
p246
I0
sS'trials_loop.thisTrialN'
p247
I14
sg45
g85
sasS'loops'
p248
(lp249
g1
(cpsychopy.data
TrialHandler
p250
g3
NtRp251
(dp252
S'origin'
p253
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[800, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="MTS - OtM 3x3" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trial_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import random&#10;&#10;# Declare variable for pass/fail training&#10;passed_training = False" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Set target stimuli categories &#10;# Location of the required category is set by the required response. &#10;# Location of the two incorrect categories is randomised.&#10;if required_response == 'left':  # left from block_layout.xlsx&#10;    target_category_left = target_category_required  # latter from block_layout.xlsx&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_middle = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'down':&#10;    target_category_middle = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'right':&#10;    target_category_right = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_middle = i.pop()&#10;&#10;# Set specific stimuli based on categories&#10;# Translate a1 etc into actual exemplars from the stimuli.xlsx file&#10;#sample&#10;if sample_category == 'a1':&#10;    sample = a1_exemplar&#10;elif sample_category == 'a2':&#10;    sample = a2_exemplar&#10;elif sample_category == 'a3':&#10;    sample = a3_exemplar&#10;elif sample_category == 'b1':  # I include B and C classes for generalisation to an equivalence task&#10;    sample = b1_exemplar&#10;elif sample_category == 'b2':&#10;    sample = b2_exemplar&#10;elif sample_category == 'b3':&#10;    sample = b3_exemplar&#10;elif sample_category == 'c1':&#10;    sample = c1_exemplar&#10;elif sample_category == 'c2':&#10;    sample = c2_exemplar&#10;elif sample_category == 'c3':&#10;    sample = c3_exemplar&#10;&#10;#target left&#10;if target_category_left == 'b1':&#10;    target_left = b1_exemplar&#10;elif target_category_left == 'b2':&#10;    target_left = b2_exemplar&#10;elif target_category_left == 'b3':&#10;    target_left = b3_exemplar&#10;elif target_category_left == 'c1':&#10;    target_left = c1_exemplar&#10;elif target_category_left == 'c2':&#10;    target_left = c2_exemplar&#10;elif target_category_left == 'c3':&#10;    target_left = c3_exemplar&#10;&#10;#target middle&#10;if target_category_middle == 'b1':&#10;    target_middle = b1_exemplar&#10;elif target_category_middle == 'b2':&#10;    target_middle = b2_exemplar&#10;elif target_category_middle == 'b3':&#10;    target_middle = b3_exemplar&#10;elif target_category_middle == 'c1':&#10;    target_middle = c1_exemplar&#10;elif target_category_middle == 'c2':&#10;    target_middle = c2_exemplar&#10;elif target_category_middle == 'c3':&#10;    target_middle = c3_exemplar&#10;&#10;#target right&#10;if target_category_right == 'b1':&#10;    target_right = b1_exemplar&#10;elif target_category_right == 'b2':&#10;    target_right = b2_exemplar&#10;elif target_category_right == 'b3':&#10;    target_right = b3_exemplar&#10;elif target_category_right == 'c1':&#10;    target_right = c1_exemplar&#10;elif target_category_right == 'c2':&#10;    target_right = c2_exemplar&#10;elif target_category_right == 'c3':&#10;    target_right = c3_exemplar&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# Adjust feedback and counters based on response&#10;if response.corr == True:&#10;    message = 'Correct'&#10;    message_color = 'lime'&#10;    correct_in_a_row += 1  # advance counter&#10;elif response.corr == False:&#10;    message = 'Wrong'&#10;    message_color = 'red'&#10;    correct_in_a_row = 0  # reset counter&#10;&#10;# End loops if mastery criterion was met&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    passed_training = True&#10;    blocks_loop.finished = True&#10;    trials_loop.finished = True&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="sample_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="sample_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$sample" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_left_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_left_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_middle_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_middle_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_middle" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_right_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_right_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="response">\u000a        <Param name="correctAns" val="$required_response" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'left', 'down', 'right'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <CodeComponent name="end_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# adjust end message&#10;if passed_training == True:&#10;    end_message = 'PASSED \u005cn\u005cnEnd of task'&#10;elif passed_training == False:&#10;    end_message = 'FAILED \u005cn\u005cnEnd of task'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <TextComponent name="feedback_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$message_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# reset counter&#10;correct_in_a_row = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="inst_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="inst_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Learn to respond correctly to the words presented on screen. &#10;&#10;Use the up (left word), down (middle word), and right (right word) keys.&#10;&#10;Press any key to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="inst_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="inst_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks_loop">\u000a      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="12" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'a1': u'CUG', u'a3': u'PIM', u'a2': u'VEK', u'b1': u'DEV', u'b2': u'BRU', u'b3': u'IKA', u'c3': u'ORT', u'c2': u'TIV', u'c1': u'NAR'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_loop">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'target_middle': u'b3', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b1', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b2', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'c3', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c1', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c2', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c3', u'target_left': u'c2'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_loop"/>\u000a    <LoopTerminator name="blocks_loop"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p254
sS'thisTrial'
p255
g1
(cpsychopy.data
TrialType
p256
c__builtin__
dict
p257
(dp258
g40
g66
sg41
g74
sg42
g67
sg43
g76
sg44
g77
sg45
g85
sg46
I15
sg47
g62
sg48
g79
sg49
g65
stRp259
sS'_exp'
p260
I214862640
sg11
S'blocks_loop'
p261
sg6
g7
sS'thisRepN'
p262
I1
sg18
I01
sg19
g20
sS'data'
p263
g1
(cpsychopy.data
DataHandler
p264
g257
(dp265
S'ran'
p266
cnumpy.ma.core
_mareconstruct
p267
(cnumpy.ma.core
MaskedArray
p268
cnumpy
ndarray
p269
(I0
tp270
S'b'
tRp271
(I1
(I1
I12
tg26
(S'f4'
I0
I1
tRp272
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p273
g267
(g268
g269
g270
S'b'
tRp274
(I1
(I1
I12
tg272
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp275
(dp276
S'isNumeric'
p277
(dp278
g266
I01
sg273
I01
ssS'trials'
p279
g251
sS'dataTypes'
p280
(lp281
g266
ag273
asS'dataShape'
p282
(lp283
I1
aI12
asbsS'method'
p284
S'sequential'
p285
sS'sequenceIndices'
p286
cnumpy.core.multiarray
_reconstruct
p287
(g269
(I0
tS'b'
tRp288
(I1
(I1
I12
tg71
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsS'finished'
p289
I01
sS'nReps'
p290
I12
sS'nRemaining'
p291
I10
sS'trialList'
p292
(lp293
g259
asS'seed'
p294
NsS'thisIndex'
p295
g72
sS'thisN'
p296
I1
sS'thisTrialN'
p297
I0
sS'nTotal'
p298
I12
sS'_warnUseOfNext'
p299
I01
sbag1
(g250
g3
NtRp300
(dp301
g253
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[800, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="MTS - OtM 3x3" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trial_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import random&#10;&#10;# Declare variable for pass/fail training&#10;passed_training = False" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Set target stimuli categories &#10;# Location of the required category is set by the required response. &#10;# Location of the two incorrect categories is randomised.&#10;if required_response == 'left':  # left from block_layout.xlsx&#10;    target_category_left = target_category_required  # latter from block_layout.xlsx&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_middle = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'down':&#10;    target_category_middle = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'right':&#10;    target_category_right = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_middle = i.pop()&#10;&#10;# Set specific stimuli based on categories&#10;# Translate a1 etc into actual exemplars from the stimuli.xlsx file&#10;#sample&#10;if sample_category == 'a1':&#10;    sample = a1_exemplar&#10;elif sample_category == 'a2':&#10;    sample = a2_exemplar&#10;elif sample_category == 'a3':&#10;    sample = a3_exemplar&#10;elif sample_category == 'b1':  # I include B and C classes for generalisation to an equivalence task&#10;    sample = b1_exemplar&#10;elif sample_category == 'b2':&#10;    sample = b2_exemplar&#10;elif sample_category == 'b3':&#10;    sample = b3_exemplar&#10;elif sample_category == 'c1':&#10;    sample = c1_exemplar&#10;elif sample_category == 'c2':&#10;    sample = c2_exemplar&#10;elif sample_category == 'c3':&#10;    sample = c3_exemplar&#10;&#10;#target left&#10;if target_category_left == 'b1':&#10;    target_left = b1_exemplar&#10;elif target_category_left == 'b2':&#10;    target_left = b2_exemplar&#10;elif target_category_left == 'b3':&#10;    target_left = b3_exemplar&#10;elif target_category_left == 'c1':&#10;    target_left = c1_exemplar&#10;elif target_category_left == 'c2':&#10;    target_left = c2_exemplar&#10;elif target_category_left == 'c3':&#10;    target_left = c3_exemplar&#10;&#10;#target middle&#10;if target_category_middle == 'b1':&#10;    target_middle = b1_exemplar&#10;elif target_category_middle == 'b2':&#10;    target_middle = b2_exemplar&#10;elif target_category_middle == 'b3':&#10;    target_middle = b3_exemplar&#10;elif target_category_middle == 'c1':&#10;    target_middle = c1_exemplar&#10;elif target_category_middle == 'c2':&#10;    target_middle = c2_exemplar&#10;elif target_category_middle == 'c3':&#10;    target_middle = c3_exemplar&#10;&#10;#target right&#10;if target_category_right == 'b1':&#10;    target_right = b1_exemplar&#10;elif target_category_right == 'b2':&#10;    target_right = b2_exemplar&#10;elif target_category_right == 'b3':&#10;    target_right = b3_exemplar&#10;elif target_category_right == 'c1':&#10;    target_right = c1_exemplar&#10;elif target_category_right == 'c2':&#10;    target_right = c2_exemplar&#10;elif target_category_right == 'c3':&#10;    target_right = c3_exemplar&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# Adjust feedback and counters based on response&#10;if response.corr == True:&#10;    message = 'Correct'&#10;    message_color = 'lime'&#10;    correct_in_a_row += 1  # advance counter&#10;elif response.corr == False:&#10;    message = 'Wrong'&#10;    message_color = 'red'&#10;    correct_in_a_row = 0  # reset counter&#10;&#10;# End loops if mastery criterion was met&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    passed_training = True&#10;    blocks_loop.finished = True&#10;    trials_loop.finished = True&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="sample_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="sample_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$sample" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_left_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_left_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_middle_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_middle_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_middle" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_right_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_right_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="response">\u000a        <Param name="correctAns" val="$required_response" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'left', 'down', 'right'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <CodeComponent name="end_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# adjust end message&#10;if passed_training == True:&#10;    end_message = 'PASSED \u005cn\u005cnEnd of task'&#10;elif passed_training == False:&#10;    end_message = 'FAILED \u005cn\u005cnEnd of task'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <TextComponent name="feedback_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$message_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# reset counter&#10;correct_in_a_row = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="inst_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="inst_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Learn to respond correctly to the words presented on screen. &#10;&#10;Use the up (left word), down (middle word), and right (right word) keys.&#10;&#10;Press any key to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="inst_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="inst_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks_loop">\u000a      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="12" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'a1': u'CUG', u'a3': u'PIM', u'a2': u'VEK', u'b1': u'DEV', u'b2': u'BRU', u'b3': u'IKA', u'c3': u'ORT', u'c2': u'TIV', u'c1': u'NAR'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_loop">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'target_middle': u'b3', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b1', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b2', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'c3', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c1', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c2', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c3', u'target_left': u'c2'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_loop"/>\u000a    <LoopTerminator name="blocks_loop"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p302
sg255
g1
(g256
g257
(dp303
g51
g87
sg50
g64
sg52
g63
sg53
g160
sg54
g60
sg55
g73
stRp304
sg260
I214862640
sg11
S'trials_loop'
p305
sg6
g7
sg262
I0
sg18
I01
sg19
g20
sg263
g1
(g264
g257
(dp306
g266
g267
(g268
g269
g270
S'b'
tRp307
(I1
(I18
I1
tg272
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g287
(g269
(I0
tS'b'
tRp308
(I1
(I18
I1
tg26
(S'O4'
I0
I1
tRp309
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp310
g107
aS'--'
p311
ag186
ag129
ag164
aS'--'
p312
ag141
ag219
ag152
ag118
ag241
ag92
ag75
ag197
ag208
aS'--'
p313
ag175
ag230
atbsg16
g267
(g268
g269
g270
S'b'
tRp314
(I1
(I18
I1
tg272
I00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?'
S'\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00'
Ntbsg17
g267
(g268
g269
g270
S'b'
tRp315
(I1
(I18
I1
tg272
I00
S"`C\xf0>\x00\x00\x00\x00,x\t?\xcc\xc58?\x04\x14\x1f?\x00\x00\x00\x00\xb4\x99'?\xc8L\x16?\x84b'?$8\t?P\xb9\x1a?\xa8@\x05?\xd8\xbc\xbc?8U'?\x14\xaf\x1a?\x00\x00\x00\x00\xec\tN?\xd0\x91\r?"
S'\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00'
Ntbsg273
g267
(g268
g269
g270
S'b'
tRp316
(I1
(I18
I1
tg272
I00
S'\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x10A\x00\x00\x80@\x00\x00\xe0@\x00\x00\x00\x00\x00\x00\xa0@\x00\x00@A\x00\x00\xc0@\x00\x00@@\x00\x00`A\x00\x00\x80?\x00\x00\x00\x00\x00\x00 A\x00\x000A\x00\x00\x00\x00\x00\x00\x00A\x00\x00PA'
S'\x00\x01\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00'
NtbstRp317
(dp318
g277
(dp319
g266
I01
sg17
I01
sg16
I01
sg15
I00
sg273
I01
ssg279
g300
sg280
(lp320
g266
ag273
ag15
ag16
ag17
asg282
(lp321
I18
aI1
asbsg284
S'random'
p322
sg286
g287
(g269
(I0
tS'b'
tRp323
(I1
(I18
I1
tg71
I01
S'\x0c\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x03\x00\x00\x00\x06\x00\x00\x00\x08\x00\x00\x00\x04\x00\x00\x00\x10\x00\x00\x00\x02\x00\x00\x00\r\x00\x00\x00\x0e\x00\x00\x00\x07\x00\x00\x00\x11\x00\x00\x00\n\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\x0f\x00\x00\x00'
tbsg289
I01
sg290
I1
sg291
I2
sg292
(lp324
g1
(g256
g257
(dp325
g51
g87
sg50
g100
sg52
g101
sg53
g61
sg54
g102
sg55
g106
stRp326
ag1
(g256
g257
(dp327
g51
g87
sg50
g100
sg52
g101
sg53
g160
sg54
g102
sg55
g106
stRp328
ag1
(g256
g257
(dp329
g51
g87
sg50
g100
sg52
g101
sg53
g88
sg54
g102
sg55
g106
stRp330
ag1
(g256
g257
(dp331
g51
g59
sg50
g102
sg52
g101
sg53
g61
sg54
g100
sg55
g106
stRp332
ag1
(g256
g257
(dp333
g51
g59
sg50
g102
sg52
g101
sg53
g160
sg54
g100
sg55
g106
stRp334
ag1
(g256
g257
(dp335
g51
g59
sg50
g102
sg52
g101
sg53
g88
sg54
g100
sg55
g106
stRp336
ag1
(g256
g257
(dp337
g51
g137
sg50
g101
sg52
g102
sg53
g61
sg54
g100
sg55
g106
stRp338
ag1
(g256
g257
(dp339
g51
g137
sg50
g101
sg52
g102
sg53
g160
sg54
g100
sg55
g106
stRp340
ag1
(g256
g257
(dp341
g51
g137
sg50
g101
sg52
g102
sg53
g88
sg54
g100
sg55
g106
stRp342
ag1
(g256
g257
(dp343
g51
g87
sg50
g64
sg52
g63
sg53
g61
sg54
g60
sg55
g73
stRp344
ag304
ag1
(g256
g257
(dp345
g51
g87
sg50
g64
sg52
g63
sg53
g88
sg54
g60
sg55
g73
stRp346
ag1
(g256
g257
(dp347
g51
g59
sg50
g60
sg52
g63
sg53
g61
sg54
g64
sg55
g73
stRp348
ag1
(g256
g257
(dp349
g51
g59
sg50
g60
sg52
g63
sg53
g160
sg54
g64
sg55
g73
stRp350
ag1
(g256
g257
(dp351
g51
g59
sg50
g60
sg52
g63
sg53
g88
sg54
g64
sg55
g73
stRp352
ag1
(g256
g257
(dp353
g51
g137
sg50
g63
sg52
g60
sg53
g61
sg54
g64
sg55
g73
stRp354
ag1
(g256
g257
(dp355
g51
g137
sg50
g63
sg52
g60
sg53
g160
sg54
g64
sg55
g73
stRp356
ag1
(g256
g257
(dp357
g51
g137
sg50
g63
sg52
g60
sg53
g88
sg54
g64
sg55
g73
stRp358
asg294
Nsg295
g244
sg296
I15
sg297
I15
sg298
I18
sg299
I01
sbasS'savePickle'
p359
I00
sb.