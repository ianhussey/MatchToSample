########################################################################
# Create summary stats from data produced by the MTS 3x3,
# programmed in PsychoPy 1.82
# Ian.Hussey@ugent.be
# Version 1.1
########################################################################
# Notes:
# Working for MTS version 0.7.
# Produces pass/fail data and number of blocks required.
# To do:
# Currently outputs two rows per participant, one for their training and
# one for testing. Reshaping would make this easier to analyse further,
# but there must be an easier way to do this than than multiple
# gather() and spread()s?
########################################################################
# Clean the workspace
rm(list=ls())
########################################################################
# Dependencies
library(plyr)
library(dplyr)
library(tidyr)
library(data.table)
########################################################################
# Data acquisition and cleaning
setwd("~/git/MatchToSample/data")
files <- list.files(pattern = "\\.csv$")  # Create a list of the csv files in this folder
df <- tbl_df(rbind.fill(lapply(files, fread, header=TRUE)))  # Read these files into a single dplyr-style data frame.
########################################################################
# Data cleaning
cleaning_df <-
rename(df, # Make some variable names more transparent
rt = response.rt,
accuracy = response.corr,
n_training_and_testing = training_and_testing.thisRepN,
n_training = training.thisRepN,
n_testing = testing.thisRepN,
training_summary_rows_only = post_trainng_loop.thisRepN,
testing_summary_rows_only = post_testing_loop.thisRepN) %>%
mutate(n_training_and_testing = n_training_and_testing +1,
n_training = n_training +1,
n_testing = n_testing +1) %>%  # recitfy to start at 1 rather than 0
select(participant,
gender,
age,
date,
rt,
accuracy,
trial_description,
passed_training,
passed_testing,
n_training_and_testing,
n_training,
n_testing,
training_summary_rows_only,
testing_summary_rows_only)
# block summaries
block_summaries_df <-
filter(cleaning_df,
!is.na(training_summary_rows_only) |
!is.na(testing_summary_rows_only)) %>%  # summary rows only
select(participant,
gender,
age,
date,
n_training_and_testing,
n_training,
n_testing,
passed_training,
passed_testing) %>%
filter(n_training_and_testing == max(n_training_and_testing, na.rm = TRUE) &  # take only the last cycle of training and testing
(n_training == max(n_training, na.rm = TRUE) |  # and either the last row of training
n_testing == max(n_testing, na.rm = TRUE)))  # or the last row of testing
# Write to file
write.csv(block_summaries_df, file = "~/git/MatchToSample/analysis/summarized_MTS_data.csv", row.names=FALSE)
