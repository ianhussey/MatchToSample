ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/git/MatchToSample/MTS - OtM 3x3.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/git/MatchToSample/data/1_MTS - OtM 3x3_2016_Apr_17_2246
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'MTS - OtM 3x3'
p12
sS'dataNames'
p13
(lp14
S'sample'
p15
aS'target_left'
p16
aS'target_middle'
p17
aS'target_right'
p18
aS'correct_in_a_row'
p19
aS'passed_training'
p20
aS'response.keys'
p21
aS'response.corr'
p22
aS'response.rt'
p23
asS'autoLog'
p24
I01
sS'extraInfo'
p25
(dp26
Vparticipant
p27
V1
sVgender
p28
V
sVage
p29
V
sS'frameRate'
p30
cnumpy.core.multiarray
scalar
p31
(cnumpy
dtype
p32
(S'f8'
I0
I1
tRp33
(I3
S'<'
NNNI-1
I-1
I0
tbS'7\xa3\xb0,\xa2\xc5M@'
tRp34
sS'expName'
p35
g12
sS'date'
p36
V2016_Apr_17_2246
p37
ssS'loopsUnfinished'
p38
(lp39
sS'saveWideText'
p40
I01
sS'thisEntry'
p41
(dp42
sS'version'
p43
S''
sS'_paramNamesSoFar'
p44
(lp45
Vc1_exemplar
p46
aVb1_exemplar
p47
aVa1_exemplar
p48
aVc2_exemplar
p49
aVc3_exemplar
p50
aVa2_exemplar
p51
aVmastery_criterion
p52
aVb3_exemplar
p53
aVa3_exemplar
p54
aVb2_exemplar
p55
aVtarget_category_required
p56
aVsample_category
p57
aVtarget_category_wrong_2
p58
aVrequired_response
p59
aVtarget_category_wrong_1
p60
aVtrial_description
p61
asS'entries'
p62
(lp63
(dp64
g19
I1
sg56
Vc1
p65
sg30
g34
sg15
VA1
p66
sg36
g37
sg59
Vleft
p67
sg53
VB3
p68
sg58
Vc3
p69
sg60
Vc2
p70
sg55
VB2
p71
sg16
VC1
p72
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p73
I0
sg22
I1
sS'trials_loop.thisRepN'
p74
I0
sg57
Va1
p75
sS'blocks_loop.thisIndex'
p76
g31
(g32
(S'i4'
I0
I1
tRp77
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp78
sg23
F1.1557590961456299
sg50
VC3
p79
sg61
Vac
p80
sg17
g79
sg47
VB1
p81
sg35
g12
sg21
S'left'
p82
sg49
VC2
p83
sg20
I00
sS'trials_loop.thisN'
p84
I0
sg52
I15
sg54
VA3
p85
sS'trials_loop.thisIndex'
p86
g31
(g77
S'\t\x00\x00\x00'
tRp87
sg28
V
sg29
V
sS'blocks_loop.thisN'
p88
I0
sS'blocks_loop.thisTrialN'
p89
I0
sS'trials_loop.thisTrialN'
p90
I0
sg51
VA2
p91
sg18
g83
sa(dp92
g19
I2
sg56
g70
sg30
g34
sg15
g91
sg36
g37
sg59
g67
sg53
g68
sg58
g69
sg60
g65
sg55
g71
sg16
g83
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p93
I0
sg22
I1
sS'trials_loop.thisRepN'
p94
I0
sg57
Va2
p95
sS'blocks_loop.thisIndex'
p96
g78
sg23
F1.256356954574585
sg50
g79
sg61
g80
sg17
g79
sg47
g81
sg35
g12
sg21
S'left'
p97
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p98
I1
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p99
g31
(g77
S'\x0c\x00\x00\x00'
tRp100
sg28
V
sg29
V
sS'blocks_loop.thisN'
p101
I0
sS'blocks_loop.thisTrialN'
p102
I0
sS'trials_loop.thisTrialN'
p103
I1
sg51
g91
sg18
g72
sa(dp104
g19
I3
sg56
Vb3
p105
sg30
g34
sg15
g85
sg36
g37
sg59
Vdown
p106
sg53
g68
sg58
Vb2
p107
sg60
Vb1
p108
sg55
g71
sg16
g81
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p109
I0
sg22
I1
sS'trials_loop.thisRepN'
p110
I0
sg57
Va3
p111
sS'blocks_loop.thisIndex'
p112
g78
sg23
F0.65337991714477539
sg50
g79
sg61
Vab
p113
sg17
g68
sg47
g81
sg35
g12
sg21
S'down'
p114
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p115
I2
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p116
g31
(g77
S'\x08\x00\x00\x00'
tRp117
sg28
V
sg29
V
sS'blocks_loop.thisN'
p118
I0
sS'blocks_loop.thisTrialN'
p119
I0
sS'trials_loop.thisTrialN'
p120
I2
sg51
g91
sg18
g71
sa(dp121
g19
I0
sg56
g70
sg30
g34
sg15
g91
sg36
g37
sg59
Vright
p122
sg53
g68
sg58
g69
sg60
g65
sg55
g71
sg16
g72
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p123
I0
sg22
I0
sS'trials_loop.thisRepN'
p124
I0
sg57
g95
sS'blocks_loop.thisIndex'
p125
g78
sg23
F0.48598217964172363
sg50
g79
sg61
g80
sg17
g79
sg47
g81
sg35
g12
sg21
S'left'
p126
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p127
I3
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p128
g31
(g77
S'\r\x00\x00\x00'
tRp129
sg28
V
sg29
V
sS'blocks_loop.thisN'
p130
I0
sS'blocks_loop.thisTrialN'
p131
I0
sS'trials_loop.thisTrialN'
p132
I3
sg51
g91
sg18
g83
sa(dp133
g19
I1
sg56
g108
sg30
g34
sg15
g66
sg36
g37
sg59
g106
sg53
g68
sg58
g105
sg60
g107
sg55
g71
sg16
g68
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p134
I0
sg22
I1
sS'trials_loop.thisRepN'
p135
I0
sg57
g75
sS'blocks_loop.thisIndex'
p136
g78
sg23
F0.75416898727416992
sg50
g79
sg61
g113
sg17
g81
sg47
g81
sg35
g12
sg21
S'down'
p137
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p138
I4
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p139
g31
(g77
S'\x02\x00\x00\x00'
tRp140
sg28
V
sg29
V
sS'blocks_loop.thisN'
p141
I0
sS'blocks_loop.thisTrialN'
p142
I0
sS'trials_loop.thisTrialN'
p143
I4
sg51
g91
sg18
g71
sa(dp144
g19
I2
sg56
g108
sg30
g34
sg15
g66
sg36
g37
sg59
g67
sg53
g68
sg58
g105
sg60
g107
sg55
g71
sg16
g81
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p145
I0
sg22
I1
sS'trials_loop.thisRepN'
p146
I0
sg57
g75
sS'blocks_loop.thisIndex'
p147
g78
sg23
F0.53683614730834961
sg50
g79
sg61
g113
sg17
g68
sg47
g81
sg35
g12
sg21
S'left'
p148
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p149
I5
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p150
g31
(g77
S'\x00\x00\x00\x00'
tRp151
sg28
V
sg29
V
sS'blocks_loop.thisN'
p152
I0
sS'blocks_loop.thisTrialN'
p153
I0
sS'trials_loop.thisTrialN'
p154
I5
sg51
g91
sg18
g71
sa(dp155
g19
I3
sg56
g69
sg30
g34
sg15
g85
sg36
g37
sg59
g106
sg53
g68
sg58
g70
sg60
g65
sg55
g71
sg16
g83
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p156
I0
sg22
I1
sS'trials_loop.thisRepN'
p157
I0
sg57
g111
sS'blocks_loop.thisIndex'
p158
g78
sg23
F2.378972053527832
sg50
g79
sg61
g80
sg17
g79
sg47
g81
sg35
g12
sg21
S'down'
p159
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p160
I6
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p161
g31
(g77
S'\x11\x00\x00\x00'
tRp162
sg28
V
sg29
V
sS'blocks_loop.thisN'
p163
I0
sS'blocks_loop.thisTrialN'
p164
I0
sS'trials_loop.thisTrialN'
p165
I6
sg51
g91
sg18
g72
sa(dp166
g19
I4
sg56
g107
sg30
g34
sg15
g91
sg36
g37
sg59
g106
sg53
g68
sg58
g105
sg60
g108
sg55
g71
sg16
g68
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p167
I0
sg22
I1
sS'trials_loop.thisRepN'
p168
I0
sg57
g95
sS'blocks_loop.thisIndex'
p169
g78
sg23
F0.7027900218963623
sg50
g79
sg61
g113
sg17
g71
sg47
g81
sg35
g12
sg21
S'down'
p170
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p171
I7
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p172
g31
(g77
S'\x05\x00\x00\x00'
tRp173
sg28
V
sg29
V
sS'blocks_loop.thisN'
p174
I0
sS'blocks_loop.thisTrialN'
p175
I0
sS'trials_loop.thisTrialN'
p176
I7
sg51
g91
sg18
g81
sa(dp177
g19
I5
sg56
g65
sg30
g34
sg15
g66
sg36
g37
sg59
g106
sg53
g68
sg58
g69
sg60
g70
sg55
g71
sg16
g79
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p178
I0
sg22
I1
sS'trials_loop.thisRepN'
p179
I0
sg57
g75
sS'blocks_loop.thisIndex'
p180
g78
sg23
F0.6369469165802002
sg50
g79
sg61
g80
sg17
g72
sg47
g81
sg35
g12
sg21
S'down'
p181
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p182
I8
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p183
g31
(g77
S'\x0b\x00\x00\x00'
tRp184
sg28
V
sg29
V
sS'blocks_loop.thisN'
p185
I0
sS'blocks_loop.thisTrialN'
p186
I0
sS'trials_loop.thisTrialN'
p187
I8
sg51
g91
sg18
g83
sa(dp188
g19
I6
sg56
g69
sg30
g34
sg15
g85
sg36
g37
sg59
g67
sg53
g68
sg58
g70
sg60
g65
sg55
g71
sg16
g79
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p189
I0
sg22
I1
sS'trials_loop.thisRepN'
p190
I0
sg57
g111
sS'blocks_loop.thisIndex'
p191
g78
sg23
F0.83820104598999023
sg50
g79
sg61
g80
sg17
g83
sg47
g81
sg35
g12
sg21
S'left'
p192
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p193
I9
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p194
g31
(g77
S'\x0f\x00\x00\x00'
tRp195
sg28
V
sg29
V
sS'blocks_loop.thisN'
p196
I0
sS'blocks_loop.thisTrialN'
p197
I0
sS'trials_loop.thisTrialN'
p198
I9
sg51
g91
sg18
g72
sa(dp199
g19
I7
sg56
g105
sg30
g34
sg15
g85
sg36
g37
sg59
g122
sg53
g68
sg58
g107
sg60
g108
sg55
g71
sg16
g81
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p200
I0
sg22
I1
sS'trials_loop.thisRepN'
p201
I0
sg57
g111
sS'blocks_loop.thisIndex'
p202
g78
sg23
F1.1734678745269775
sg50
g79
sg61
g113
sg17
g71
sg47
g81
sg35
g12
sg21
S'right'
p203
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p204
I10
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p205
g31
(g77
S'\x07\x00\x00\x00'
tRp206
sg28
V
sg29
V
sS'blocks_loop.thisN'
p207
I0
sS'blocks_loop.thisTrialN'
p208
I0
sS'trials_loop.thisTrialN'
p209
I10
sg51
g91
sg18
g68
sa(dp210
g19
I8
sg56
g69
sg30
g34
sg15
g85
sg36
g37
sg59
g122
sg53
g68
sg58
g70
sg60
g65
sg55
g71
sg16
g72
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p211
I0
sg22
I1
sS'trials_loop.thisRepN'
p212
I0
sg57
g111
sS'blocks_loop.thisIndex'
p213
g78
sg23
F0.77062892913818359
sg50
g79
sg61
g80
sg17
g83
sg47
g81
sg35
g12
sg21
S'right'
p214
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p215
I11
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p216
g31
(g77
S'\x10\x00\x00\x00'
tRp217
sg28
V
sg29
V
sS'blocks_loop.thisN'
p218
I0
sS'blocks_loop.thisTrialN'
p219
I0
sS'trials_loop.thisTrialN'
p220
I11
sg51
g91
sg18
g79
sa(dp221
g19
I9
sg56
g105
sg30
g34
sg15
g85
sg36
g37
sg59
g67
sg53
g68
sg58
g107
sg60
g108
sg55
g71
sg16
g68
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p222
I0
sg22
I1
sS'trials_loop.thisRepN'
p223
I0
sg57
g111
sS'blocks_loop.thisIndex'
p224
g78
sg23
F0.75375914573669434
sg50
g79
sg61
g113
sg17
g81
sg47
g81
sg35
g12
sg21
S'left'
p225
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p226
I12
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p227
g31
(g77
S'\x06\x00\x00\x00'
tRp228
sg28
V
sg29
V
sS'blocks_loop.thisN'
p229
I0
sS'blocks_loop.thisTrialN'
p230
I0
sS'trials_loop.thisTrialN'
p231
I12
sg51
g91
sg18
g71
sa(dp232
g19
I10
sg56
g107
sg30
g34
sg15
g91
sg36
g37
sg59
g122
sg53
g68
sg58
g105
sg60
g108
sg55
g71
sg16
g81
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p233
I0
sg22
I1
sS'trials_loop.thisRepN'
p234
I0
sg57
g95
sS'blocks_loop.thisIndex'
p235
g78
sg23
F1.2066638469696045
sg50
g79
sg61
g113
sg17
g68
sg47
g81
sg35
g12
sg21
S'right'
p236
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p237
I13
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p238
g31
(g77
S'\x04\x00\x00\x00'
tRp239
sg28
V
sg29
V
sS'blocks_loop.thisN'
p240
I0
sS'blocks_loop.thisTrialN'
p241
I0
sS'trials_loop.thisTrialN'
p242
I13
sg51
g91
sg18
g71
sa(dp243
g19
I11
sg56
g107
sg30
g34
sg15
g91
sg36
g37
sg59
g67
sg53
g68
sg58
g105
sg60
g108
sg55
g71
sg16
g71
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p244
I0
sg22
I1
sS'trials_loop.thisRepN'
p245
I0
sg57
g95
sS'blocks_loop.thisIndex'
p246
g78
sg23
F0.93969988822937012
sg50
g79
sg61
g113
sg17
g68
sg47
g81
sg35
g12
sg21
S'left'
p247
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p248
I14
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p249
g31
(g77
S'\x03\x00\x00\x00'
tRp250
sg28
V
sg29
V
sS'blocks_loop.thisN'
p251
I0
sS'blocks_loop.thisTrialN'
p252
I0
sS'trials_loop.thisTrialN'
p253
I14
sg51
g91
sg18
g81
sa(dp254
g19
I12
sg56
g108
sg30
g34
sg15
g66
sg36
g37
sg59
g122
sg53
g68
sg58
g105
sg60
g107
sg55
g71
sg16
g68
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p255
I0
sg22
I1
sS'trials_loop.thisRepN'
p256
I0
sg57
g75
sS'blocks_loop.thisIndex'
p257
g78
sg23
F0.67047715187072754
sg50
g79
sg61
g113
sg17
g71
sg47
g81
sg35
g12
sg21
S'right'
p258
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p259
I15
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p260
g31
(g77
S'\x01\x00\x00\x00'
tRp261
sg28
V
sg29
V
sS'blocks_loop.thisN'
p262
I0
sS'blocks_loop.thisTrialN'
p263
I0
sS'trials_loop.thisTrialN'
p264
I15
sg51
g91
sg18
g81
sa(dp265
g19
I13
sg56
g65
sg30
g34
sg15
g66
sg36
g37
sg59
g122
sg53
g68
sg58
g69
sg60
g70
sg55
g71
sg16
g79
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p266
I0
sg22
I1
sS'trials_loop.thisRepN'
p267
I0
sg57
g75
sS'blocks_loop.thisIndex'
p268
g78
sg23
F0.60457992553710938
sg50
g79
sg61
g80
sg17
g83
sg47
g81
sg35
g12
sg21
S'right'
p269
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p270
I16
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p271
g31
(g77
S'\n\x00\x00\x00'
tRp272
sg28
V
sg29
V
sS'blocks_loop.thisN'
p273
I0
sS'blocks_loop.thisTrialN'
p274
I0
sS'trials_loop.thisTrialN'
p275
I16
sg51
g91
sg18
g72
sa(dp276
g19
I14
sg56
g70
sg30
g34
sg15
g91
sg36
g37
sg59
g106
sg53
g68
sg58
g69
sg60
g65
sg55
g71
sg16
g72
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p277
I0
sg22
I1
sS'trials_loop.thisRepN'
p278
I0
sg57
g95
sS'blocks_loop.thisIndex'
p279
g78
sg23
F1.2402729988098145
sg50
g79
sg61
g80
sg17
g83
sg47
g81
sg35
g12
sg21
S'down'
p280
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p281
I17
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p282
g31
(g77
S'\x0e\x00\x00\x00'
tRp283
sg28
V
sg29
V
sS'blocks_loop.thisN'
p284
I0
sS'blocks_loop.thisTrialN'
p285
I0
sS'trials_loop.thisTrialN'
p286
I17
sg51
g91
sg18
g79
sa(dp287
g19
I1
sVtarget_category_required
p288
Vb1
p289
sg30
g34
sg15
g66
sg36
g37
sVrequired_response
p290
Vdown
p291
sg53
g68
sVtarget_category_wrong_2
p292
Vb3
p293
sVtarget_category_wrong_1
p294
Vb2
p295
sg55
g71
sg16
g71
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p296
I1
sg22
I1
sS'trials_loop.thisRepN'
p297
I0
sVsample_category
p298
Va1
p299
sS'blocks_loop.thisIndex'
p300
g31
(g77
S'\x00\x00\x00\x00'
tRp301
sg23
F0.60388398170471191
sg50
g79
sVtrial_description
p302
Vab
p303
sg17
g81
sg47
g81
sg35
g12
sg21
S'down'
p304
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p305
I0
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p306
g31
(g77
S'\x02\x00\x00\x00'
tRp307
sg28
V
sg29
V
sS'blocks_loop.thisN'
p308
I1
sS'blocks_loop.thisTrialN'
p309
I0
sS'trials_loop.thisTrialN'
p310
I0
sg51
g91
sg18
g68
sa(dp311
g19
I2
sg288
g293
sg30
g34
sg15
g85
sg36
g37
sg290
Vleft
p312
sg53
g68
sg292
g295
sg294
g289
sg55
g71
sg16
g68
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p313
I1
sg22
I1
sS'trials_loop.thisRepN'
p314
I0
sg298
Va3
p315
sS'blocks_loop.thisIndex'
p316
g301
sg23
F0.55262112617492676
sg50
g79
sg302
g303
sg17
g71
sg47
g81
sg35
g12
sg21
S'left'
p317
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p318
I1
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p319
g31
(g77
S'\x06\x00\x00\x00'
tRp320
sg28
V
sg29
V
sS'blocks_loop.thisN'
p321
I1
sS'blocks_loop.thisTrialN'
p322
I0
sS'trials_loop.thisTrialN'
p323
I1
sg51
g91
sg18
g81
sa(dp324
g19
I3
sg288
Vc1
p325
sg30
g34
sg15
g66
sg36
g37
sg290
Vright
p326
sg53
g68
sg292
Vc3
p327
sg294
Vc2
p328
sg55
g71
sg16
g79
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p329
I1
sg22
I1
sS'trials_loop.thisRepN'
p330
I0
sg298
g299
sS'blocks_loop.thisIndex'
p331
g301
sg23
F0.75457096099853516
sg50
g79
sg302
Vac
p332
sg17
g83
sg47
g81
sg35
g12
sg21
S'right'
p333
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p334
I2
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p335
g31
(g77
S'\n\x00\x00\x00'
tRp336
sg28
V
sg29
V
sS'blocks_loop.thisN'
p337
I1
sS'blocks_loop.thisTrialN'
p338
I0
sS'trials_loop.thisTrialN'
p339
I2
sg51
g91
sg18
g72
sa(dp340
g19
I4
sg288
g327
sg30
g34
sg15
g85
sg36
g37
sg290
g312
sg53
g68
sg292
g328
sg294
g325
sg55
g71
sg16
g79
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p341
I1
sg22
I1
sS'trials_loop.thisRepN'
p342
I0
sg298
g315
sS'blocks_loop.thisIndex'
p343
g301
sg23
F0.87231898307800293
sg50
g79
sg302
g332
sg17
g72
sg47
g81
sg35
g12
sg21
S'left'
p344
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p345
I3
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p346
g31
(g77
S'\x0f\x00\x00\x00'
tRp347
sg28
V
sg29
V
sS'blocks_loop.thisN'
p348
I1
sS'blocks_loop.thisTrialN'
p349
I0
sS'trials_loop.thisTrialN'
p350
I3
sg51
g91
sg18
g83
sa(dp351
g19
I5
sg288
g328
sg30
g34
sg15
g91
sg36
g37
sg290
g326
sg53
g68
sg292
g327
sg294
g325
sg55
g71
sg16
g79
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p352
I1
sg22
I1
sS'trials_loop.thisRepN'
p353
I0
sg298
Va2
p354
sS'blocks_loop.thisIndex'
p355
g301
sg23
F1.1566150188446045
sg50
g79
sg302
g332
sg17
g72
sg47
g81
sg35
g12
sg21
S'right'
p356
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p357
I4
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p358
g31
(g77
S'\r\x00\x00\x00'
tRp359
sg28
V
sg29
V
sS'blocks_loop.thisN'
p360
I1
sS'blocks_loop.thisTrialN'
p361
I0
sS'trials_loop.thisTrialN'
p362
I4
sg51
g91
sg18
g83
sa(dp363
g19
I6
sg288
g328
sg30
g34
sg15
g91
sg36
g37
sg290
g312
sg53
g68
sg292
g327
sg294
g325
sg55
g71
sg16
g83
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p364
I1
sg22
I1
sS'trials_loop.thisRepN'
p365
I0
sg298
g354
sS'blocks_loop.thisIndex'
p366
g301
sg23
F0.71990585327148438
sg50
g79
sg302
g332
sg17
g79
sg47
g81
sg35
g12
sg21
S'left'
p367
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p368
I5
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p369
g31
(g77
S'\x0c\x00\x00\x00'
tRp370
sg28
V
sg29
V
sS'blocks_loop.thisN'
p371
I1
sS'blocks_loop.thisTrialN'
p372
I0
sS'trials_loop.thisTrialN'
p373
I5
sg51
g91
sg18
g72
sa(dp374
g19
I7
sg288
g327
sg30
g34
sg15
g85
sg36
g37
sg290
g326
sg53
g68
sg292
g328
sg294
g325
sg55
g71
sg16
g72
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p375
I1
sg22
I1
sS'trials_loop.thisRepN'
p376
I0
sg298
g315
sS'blocks_loop.thisIndex'
p377
g301
sg23
F0.65340805053710938
sg50
g79
sg302
g332
sg17
g83
sg47
g81
sg35
g12
sg21
S'right'
p378
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p379
I6
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p380
g31
(g77
S'\x10\x00\x00\x00'
tRp381
sg28
V
sg29
V
sS'blocks_loop.thisN'
p382
I1
sS'blocks_loop.thisTrialN'
p383
I0
sS'trials_loop.thisTrialN'
p384
I6
sg51
g91
sg18
g79
sa(dp385
g19
I8
sg288
g325
sg30
g34
sg15
g66
sg36
g37
sg290
g312
sg53
g68
sg292
g327
sg294
g328
sg55
g71
sg16
g72
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p386
I1
sg22
I1
sS'trials_loop.thisRepN'
p387
I0
sg298
g299
sS'blocks_loop.thisIndex'
p388
g301
sg23
F0.65461516380310059
sg50
g79
sg302
g332
sg17
g83
sg47
g81
sg35
g12
sg21
S'left'
p389
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p390
I7
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p391
g31
(g77
S'\t\x00\x00\x00'
tRp392
sg28
V
sg29
V
sS'blocks_loop.thisN'
p393
I1
sS'blocks_loop.thisTrialN'
p394
I0
sS'trials_loop.thisTrialN'
p395
I7
sg51
g91
sg18
g79
sa(dp396
g19
I9
sg288
g289
sg30
g34
sg15
g66
sg36
g37
sg290
g326
sg53
g68
sg292
g293
sg294
g295
sg55
g71
sg16
g68
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p397
I1
sg22
I1
sS'trials_loop.thisRepN'
p398
I0
sg298
g299
sS'blocks_loop.thisIndex'
p399
g301
sg23
F0.62076878547668457
sg50
g79
sg302
g303
sg17
g71
sg47
g81
sg35
g12
sg21
S'right'
p400
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p401
I8
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p402
g31
(g77
S'\x01\x00\x00\x00'
tRp403
sg28
V
sg29
V
sS'blocks_loop.thisN'
p404
I1
sS'blocks_loop.thisTrialN'
p405
I0
sS'trials_loop.thisTrialN'
p406
I8
sg51
g91
sg18
g81
sa(dp407
g19
I10
sg288
g293
sg30
g34
sg15
g85
sg36
g37
sg290
g291
sg53
g68
sg292
g295
sg294
g289
sg55
g71
sg16
g81
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p408
I1
sg22
I1
sS'trials_loop.thisRepN'
p409
I0
sg298
g315
sS'blocks_loop.thisIndex'
p410
g301
sg23
F0.82281804084777832
sg50
g79
sg302
g303
sg17
g68
sg47
g81
sg35
g12
sg21
S'down'
p411
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p412
I9
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p413
g31
(g77
S'\x08\x00\x00\x00'
tRp414
sg28
V
sg29
V
sS'blocks_loop.thisN'
p415
I1
sS'blocks_loop.thisTrialN'
p416
I0
sS'trials_loop.thisTrialN'
p417
I9
sg51
g91
sg18
g71
sa(dp418
g19
I11
sg288
g327
sg30
g34
sg15
g85
sg36
g37
sg290
g291
sg53
g68
sg292
g328
sg294
g325
sg55
g71
sg16
g83
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p419
I1
sg22
I1
sS'trials_loop.thisRepN'
p420
I0
sg298
g315
sS'blocks_loop.thisIndex'
p421
g301
sg23
F0.95517587661743164
sg50
g79
sg302
g332
sg17
g79
sg47
g81
sg35
g12
sg21
S'down'
p422
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p423
I10
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p424
g31
(g77
S'\x11\x00\x00\x00'
tRp425
sg28
V
sg29
V
sS'blocks_loop.thisN'
p426
I1
sS'blocks_loop.thisTrialN'
p427
I0
sS'trials_loop.thisTrialN'
p428
I10
sg51
g91
sg18
g72
sa(dp429
g19
I12
sg288
g328
sg30
g34
sg15
g91
sg36
g37
sg290
g291
sg53
g68
sg292
g327
sg294
g325
sg55
g71
sg16
g72
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p430
I1
sg22
I1
sS'trials_loop.thisRepN'
p431
I0
sg298
g354
sS'blocks_loop.thisIndex'
p432
g301
sg23
F0.87293291091918945
sg50
g79
sg302
g332
sg17
g83
sg47
g81
sg35
g12
sg21
S'down'
p433
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p434
I11
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p435
g31
(g77
S'\x0e\x00\x00\x00'
tRp436
sg28
V
sg29
V
sS'blocks_loop.thisN'
p437
I1
sS'blocks_loop.thisTrialN'
p438
I0
sS'trials_loop.thisTrialN'
p439
I11
sg51
g91
sg18
g79
sa(dp440
g19
I13
sg288
g325
sg30
g34
sg15
g66
sg36
g37
sg290
g291
sg53
g68
sg292
g327
sg294
g328
sg55
g71
sg16
g79
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p441
I1
sg22
I1
sS'trials_loop.thisRepN'
p442
I0
sg298
g299
sS'blocks_loop.thisIndex'
p443
g301
sg23
F0.56899690628051758
sg50
g79
sg302
g332
sg17
g72
sg47
g81
sg35
g12
sg21
S'down'
p444
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p445
I12
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p446
g31
(g77
S'\x0b\x00\x00\x00'
tRp447
sg28
V
sg29
V
sS'blocks_loop.thisN'
p448
I1
sS'blocks_loop.thisTrialN'
p449
I0
sS'trials_loop.thisTrialN'
p450
I12
sg51
g91
sg18
g83
sa(dp451
g19
I14
sg288
g295
sg30
g34
sg15
g91
sg36
g37
sg290
g326
sg53
g68
sg292
g293
sg294
g289
sg55
g71
sg16
g81
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p452
I1
sg22
I1
sS'trials_loop.thisRepN'
p453
I0
sg298
g354
sS'blocks_loop.thisIndex'
p454
g301
sg23
F0.95505714416503906
sg50
g79
sg302
g303
sg17
g68
sg47
g81
sg35
g12
sg21
S'right'
p455
sg49
g83
sg20
I00
sS'trials_loop.thisN'
p456
I13
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p457
g31
(g77
S'\x04\x00\x00\x00'
tRp458
sg28
V
sg29
V
sS'blocks_loop.thisN'
p459
I1
sS'blocks_loop.thisTrialN'
p460
I0
sS'trials_loop.thisTrialN'
p461
I13
sg51
g91
sg18
g71
sa(dp462
g19
I15
sg288
g293
sg30
g34
sg15
g85
sg36
g37
sg290
g326
sg53
g68
sg292
g295
sg294
g289
sg55
g71
sg16
g71
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p463
I1
sg22
I1
sS'trials_loop.thisRepN'
p464
I0
sg298
g315
sS'blocks_loop.thisIndex'
p465
g301
sg23
F1.0047309398651123
sg50
g79
sg302
g303
sg17
g81
sg47
g81
sg35
g12
sg21
S'right'
p466
sg49
g83
sg20
I01
sS'trials_loop.thisN'
p467
I14
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p468
g31
(g77
S'\x07\x00\x00\x00'
tRp469
sg28
V
sg29
V
sS'blocks_loop.thisN'
p470
I1
sS'blocks_loop.thisTrialN'
p471
I0
sS'trials_loop.thisTrialN'
p472
I14
sg51
g91
sg18
g68
sa(dp473
g19
I16
sg288
g295
sg30
g34
sg15
g91
sg36
g37
sg290
g291
sg53
g68
sg292
g293
sg294
g289
sg55
g71
sg16
g68
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p474
I1
sg22
I1
sS'trials_loop.thisRepN'
p475
I0
sg298
g354
sS'blocks_loop.thisIndex'
p476
g301
sg23
F0.93901586532592773
sg50
g79
sg302
g303
sg17
g71
sg47
g81
sg35
g12
sg21
S'down'
p477
sg49
g83
sg20
I01
sS'trials_loop.thisN'
p478
I15
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p479
g31
(g77
S'\x05\x00\x00\x00'
tRp480
sg28
V
sg29
V
sS'blocks_loop.thisN'
p481
I1
sS'blocks_loop.thisTrialN'
p482
I0
sS'trials_loop.thisTrialN'
p483
I15
sg51
g91
sg18
g81
sa(dp484
g19
I17
sg288
g289
sg30
g34
sg15
g66
sg36
g37
sg290
g312
sg53
g68
sg292
g293
sg294
g295
sg55
g71
sg16
g81
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p485
I1
sg22
I1
sS'trials_loop.thisRepN'
p486
I0
sg298
g299
sS'blocks_loop.thisIndex'
p487
g301
sg23
F0.60502099990844727
sg50
g79
sg302
g303
sg17
g71
sg47
g81
sg35
g12
sg21
S'left'
p488
sg49
g83
sg20
I01
sS'trials_loop.thisN'
p489
I16
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p490
g31
(g77
S'\x00\x00\x00\x00'
tRp491
sg28
V
sg29
V
sS'blocks_loop.thisN'
p492
I1
sS'blocks_loop.thisTrialN'
p493
I0
sS'trials_loop.thisTrialN'
p494
I16
sg51
g91
sg18
g68
sa(dp495
g19
I18
sg288
g295
sg30
g34
sg15
g91
sg36
g37
sg290
g312
sg53
g68
sg292
g293
sg294
g289
sg55
g71
sg16
g71
sg46
g72
sg48
g66
sg27
V1
sS'blocks_loop.thisRepN'
p496
I1
sg22
I1
sS'trials_loop.thisRepN'
p497
I0
sg298
g354
sS'blocks_loop.thisIndex'
p498
g301
sg23
F1.2237498760223389
sg50
g79
sg302
g303
sg17
g68
sg47
g81
sg35
g12
sg21
S'left'
p499
sg49
g83
sg20
I01
sS'trials_loop.thisN'
p500
I17
sg52
I15
sg54
g85
sS'trials_loop.thisIndex'
p501
g31
(g77
S'\x03\x00\x00\x00'
tRp502
sg28
V
sg29
V
sS'blocks_loop.thisN'
p503
I1
sS'blocks_loop.thisTrialN'
p504
I0
sS'trials_loop.thisTrialN'
p505
I17
sg51
g91
sg18
g81
sasS'loops'
p506
(lp507
g1
(cpsychopy.data
TrialHandler
p508
g3
NtRp509
(dp510
S'origin'
p511
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="MTS - OtM 3x3" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trial_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import random&#10;&#10;# Declare variable for pass/fail training&#10;passed_training = False" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Set target stimuli categories &#10;# Location of the required category is set by the required response. &#10;# Location of the two incorrect categories is randomised.&#10;if required_response == 'left':  # left from block_layout.xlsx&#10;    target_category_left = target_category_required  # latter from block_layout.xlsx&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_middle = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'down':&#10;    target_category_middle = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'right':&#10;    target_category_right = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_middle = i.pop()&#10;&#10;# Set specific stimuli based on categories&#10;# Translate a1 etc into actual exemplars from the stimuli.xlsx file&#10;#sample&#10;if sample_category == 'a1':&#10;    sample = a1_exemplar&#10;elif sample_category == 'a2':&#10;    sample = a2_exemplar&#10;elif sample_category == 'a3':&#10;    sample = a3_exemplar&#10;elif sample_category == 'b1':  # I include B and C classes for generalisation to an equivalence task&#10;    sample = b1_exemplar&#10;elif sample_category == 'b2':&#10;    sample = b2_exemplar&#10;elif sample_category == 'b3':&#10;    sample = b3_exemplar&#10;elif sample_category == 'c1':&#10;    sample = c1_exemplar&#10;elif sample_category == 'c2':&#10;    sample = c2_exemplar&#10;elif sample_category == 'c3':&#10;    sample = c3_exemplar&#10;&#10;#target left&#10;if target_category_left == 'b1':&#10;    target_left = b1_exemplar&#10;elif target_category_left == 'b2':&#10;    target_left = b2_exemplar&#10;elif target_category_left == 'b3':&#10;    target_left = b3_exemplar&#10;elif target_category_left == 'c1':&#10;    target_left = c1_exemplar&#10;elif target_category_left == 'c2':&#10;    target_left = c2_exemplar&#10;elif target_category_left == 'c3':&#10;    target_left = c3_exemplar&#10;&#10;#target middle&#10;if target_category_middle == 'b1':&#10;    target_middle = b1_exemplar&#10;elif target_category_middle == 'b2':&#10;    target_middle = b2_exemplar&#10;elif target_category_middle == 'b3':&#10;    target_middle = b3_exemplar&#10;elif target_category_middle == 'c1':&#10;    target_middle = c1_exemplar&#10;elif target_category_middle == 'c2':&#10;    target_middle = c2_exemplar&#10;elif target_category_middle == 'c3':&#10;    target_middle = c3_exemplar&#10;&#10;#target right&#10;if target_category_right == 'b1':&#10;    target_right = b1_exemplar&#10;elif target_category_right == 'b2':&#10;    target_right = b2_exemplar&#10;elif target_category_right == 'b3':&#10;    target_right = b3_exemplar&#10;elif target_category_right == 'c1':&#10;    target_right = c1_exemplar&#10;elif target_category_right == 'c2':&#10;    target_right = c2_exemplar&#10;elif target_category_right == 'c3':&#10;    target_right = c3_exemplar&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# Adjust feedback and counters based on response&#10;if response.corr == True:&#10;    message = 'Correct'&#10;    message_color = 'lime'&#10;    correct_in_a_row += 1  # advance counter&#10;elif response.corr == False:&#10;    message = 'Wrong'&#10;    message_color = 'red'&#10;    correct_in_a_row = 0  # reset counter&#10;&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    passed_training = True&#10;&#10;# save variables to the experiment handler to be written to the data file&#10;thisExp.addData('sample', sample)&#10;thisExp.addData('target_left', target_left)&#10;thisExp.addData('target_middle', target_middle)&#10;thisExp.addData('target_right', target_right)&#10;thisExp.addData('correct_in_a_row', correct_in_a_row)&#10;thisExp.addData('passed_training', passed_training)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="sample_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="sample_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$sample" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_left_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_left_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_middle_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_middle_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_middle" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_right_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_right_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="response">\u000a        <Param name="correctAns" val="$required_response" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'left', 'down', 'right'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <CodeComponent name="end_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# adjust end message&#10;if passed_training == True:&#10;    end_message = 'PASSED \u005cn\u005cnEnd of task'&#10;elif passed_training == False:&#10;    end_message = 'FAILED \u005cn\u005cnEnd of task'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <TextComponent name="feedback_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$message_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="postblock">\u000a      <CodeComponent name="postblock_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# End loops if mastery criterion was met&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    blocks_loop.finished = True&#10;    trials_loop.finished = True&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# reset counter&#10;correct_in_a_row = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="inst_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="inst_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Learn to respond correctly to the words presented on screen. &#10;&#10;Use the up (left word), down (middle word), and right (right word) keys.&#10;&#10;Press any key to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="inst_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="inst_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks_loop">\u000a      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="12" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'a1': u'CUG', u'a3': u'PIM', u'a2': u'VEK', u'b1': u'DEV', u'b2': u'BRU', u'b3': u'IKA', u'c3': u'ORT', u'c2': u'TIV', u'c1': u'NAR'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_loop">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'target_middle': u'b3', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b1', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b2', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'c3', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c1', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c2', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c3', u'target_left': u'c2'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_loop"/>\u000a    <Routine name="postblock"/>\u000a    <LoopTerminator name="blocks_loop"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p512
sS'thisTrial'
p513
g1
(cpsychopy.data
TrialType
p514
c__builtin__
dict
p515
(dp516
g46
g72
sg47
g81
sg48
g66
sg49
g83
sg50
g79
sg51
g91
sg52
I15
sg53
g68
sg54
g85
sg55
g71
stRp517
sS'_exp'
p518
I217074736
sg11
S'blocks_loop'
p519
sg6
g7
sS'thisRepN'
p520
I2
sg24
I01
sg25
g26
sS'data'
p521
g1
(cpsychopy.data
DataHandler
p522
g515
(dp523
S'ran'
p524
cnumpy.ma.core
_mareconstruct
p525
(cnumpy.ma.core
MaskedArray
p526
cnumpy
ndarray
p527
(I0
tp528
S'b'
tRp529
(I1
(I1
I12
tg32
(S'f4'
I0
I1
tRp530
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p531
g525
(g526
g527
g528
S'b'
tRp532
(I1
(I1
I12
tg530
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp533
(dp534
S'isNumeric'
p535
(dp536
g524
I01
sg531
I01
ssS'trials'
p537
g509
sS'dataTypes'
p538
(lp539
g524
ag531
asS'dataShape'
p540
(lp541
I1
aI12
asbsS'method'
p542
S'sequential'
p543
sS'sequenceIndices'
p544
cnumpy.core.multiarray
_reconstruct
p545
(g527
(I0
tS'b'
tRp546
(I1
(I1
I12
tg77
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsS'finished'
p547
I01
sS'nReps'
p548
I12
sS'nRemaining'
p549
I9
sS'trialList'
p550
(lp551
g517
asS'seed'
p552
NsS'thisIndex'
p553
g301
sS'thisN'
p554
I2
sS'thisTrialN'
p555
I0
sS'nTotal'
p556
I12
sS'_warnUseOfNext'
p557
I01
sbag1
(g508
g3
NtRp558
(dp559
g511
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="MTS - OtM 3x3" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trial_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import random&#10;&#10;# Declare variable for pass/fail training&#10;passed_training = False" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Set target stimuli categories &#10;# Location of the required category is set by the required response. &#10;# Location of the two incorrect categories is randomised.&#10;if required_response == 'left':  # left from block_layout.xlsx&#10;    target_category_left = target_category_required  # latter from block_layout.xlsx&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_middle = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'down':&#10;    target_category_middle = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'right':&#10;    target_category_right = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_middle = i.pop()&#10;&#10;# Set specific stimuli based on categories&#10;# Translate a1 etc into actual exemplars from the stimuli.xlsx file&#10;#sample&#10;if sample_category == 'a1':&#10;    sample = a1_exemplar&#10;elif sample_category == 'a2':&#10;    sample = a2_exemplar&#10;elif sample_category == 'a3':&#10;    sample = a3_exemplar&#10;elif sample_category == 'b1':  # I include B and C classes for generalisation to an equivalence task&#10;    sample = b1_exemplar&#10;elif sample_category == 'b2':&#10;    sample = b2_exemplar&#10;elif sample_category == 'b3':&#10;    sample = b3_exemplar&#10;elif sample_category == 'c1':&#10;    sample = c1_exemplar&#10;elif sample_category == 'c2':&#10;    sample = c2_exemplar&#10;elif sample_category == 'c3':&#10;    sample = c3_exemplar&#10;&#10;#target left&#10;if target_category_left == 'b1':&#10;    target_left = b1_exemplar&#10;elif target_category_left == 'b2':&#10;    target_left = b2_exemplar&#10;elif target_category_left == 'b3':&#10;    target_left = b3_exemplar&#10;elif target_category_left == 'c1':&#10;    target_left = c1_exemplar&#10;elif target_category_left == 'c2':&#10;    target_left = c2_exemplar&#10;elif target_category_left == 'c3':&#10;    target_left = c3_exemplar&#10;&#10;#target middle&#10;if target_category_middle == 'b1':&#10;    target_middle = b1_exemplar&#10;elif target_category_middle == 'b2':&#10;    target_middle = b2_exemplar&#10;elif target_category_middle == 'b3':&#10;    target_middle = b3_exemplar&#10;elif target_category_middle == 'c1':&#10;    target_middle = c1_exemplar&#10;elif target_category_middle == 'c2':&#10;    target_middle = c2_exemplar&#10;elif target_category_middle == 'c3':&#10;    target_middle = c3_exemplar&#10;&#10;#target right&#10;if target_category_right == 'b1':&#10;    target_right = b1_exemplar&#10;elif target_category_right == 'b2':&#10;    target_right = b2_exemplar&#10;elif target_category_right == 'b3':&#10;    target_right = b3_exemplar&#10;elif target_category_right == 'c1':&#10;    target_right = c1_exemplar&#10;elif target_category_right == 'c2':&#10;    target_right = c2_exemplar&#10;elif target_category_right == 'c3':&#10;    target_right = c3_exemplar&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# Adjust feedback and counters based on response&#10;if response.corr == True:&#10;    message = 'Correct'&#10;    message_color = 'lime'&#10;    correct_in_a_row += 1  # advance counter&#10;elif response.corr == False:&#10;    message = 'Wrong'&#10;    message_color = 'red'&#10;    correct_in_a_row = 0  # reset counter&#10;&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    passed_training = True&#10;&#10;# save variables to the experiment handler to be written to the data file&#10;thisExp.addData('sample', sample)&#10;thisExp.addData('target_left', target_left)&#10;thisExp.addData('target_middle', target_middle)&#10;thisExp.addData('target_right', target_right)&#10;thisExp.addData('correct_in_a_row', correct_in_a_row)&#10;thisExp.addData('passed_training', passed_training)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="sample_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="sample_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$sample" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_left_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_left_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_middle_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_middle_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_middle" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_right_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_right_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="response">\u000a        <Param name="correctAns" val="$required_response" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'left', 'down', 'right'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <CodeComponent name="end_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# adjust end message&#10;if passed_training == True:&#10;    end_message = 'PASSED \u005cn\u005cnEnd of task'&#10;elif passed_training == False:&#10;    end_message = 'FAILED \u005cn\u005cnEnd of task'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <TextComponent name="feedback_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$message_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="postblock">\u000a      <CodeComponent name="postblock_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# End loops if mastery criterion was met&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    blocks_loop.finished = True&#10;    trials_loop.finished = True&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# reset counter&#10;correct_in_a_row = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="inst_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="inst_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Learn to respond correctly to the words presented on screen. &#10;&#10;Use the up (left word), down (middle word), and right (right word) keys.&#10;&#10;Press any key to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="inst_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="inst_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks_loop">\u000a      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="12" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'a1': u'CUG', u'a3': u'PIM', u'a2': u'VEK', u'b1': u'DEV', u'b2': u'BRU', u'b3': u'IKA', u'c3': u'ORT', u'c2': u'TIV', u'c1': u'NAR'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_loop">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'target_middle': u'b3', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b1', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b2', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'c3', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c1', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c2', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c3', u'target_left': u'c2'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_loop"/>\u000a    <Routine name="postblock"/>\u000a    <LoopTerminator name="blocks_loop"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p560
sg513
(lp561
sg518
I217074736
sg11
S'trials_loop'
p562
sg6
g7
sg520
I1
sg24
I01
sg25
g26
sg521
g1
(g522
g515
(dp563
g524
g525
(g526
g527
g528
S'b'
tRp564
(I1
(I18
I1
tg530
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g545
(g527
(I0
tS'b'
tRp565
(I1
(I18
I1
tg32
(S'O4'
I0
I1
tRp566
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp567
g148
ag258
ag137
ag247
ag236
ag170
ag225
ag203
ag114
ag82
ag269
ag181
ag97
ag126
ag280
ag192
ag214
ag159
atbsg22
g525
(g526
g527
g528
S'b'
tRp568
(I1
(I18
I1
tg530
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg23
g525
(g526
g527
g528
S'b'
tRp569
(I1
(I18
I1
tg530
I00
S"\x18n\t?d\xa4+?8\x11A?,\x90p?\xf6s\x9a?\x0c\xea3?\\\xf6@?24\x96?\xe8C'?\xea\xef\x93?\xc0\xc5\x1a?\xf4\x0e#?N\xd0\xa0?\xa8\xd2\xf8>D\xc1\x9e?X\x94V?\xf0GE?\x14A\x18@"
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg531
g525
(g526
g527
g528
S'b'
tRp570
(I1
(I18
I1
tg530
I00
S'\x00\x00\xa0@\x00\x00pA\x00\x00\x80@\x00\x00`A\x00\x00PA\x00\x00\xe0@\x00\x00@A\x00\x00 A\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x80A\x00\x00\x00A\x00\x00\x80?\x00\x00@@\x00\x00\x88A\x00\x00\x10A\x00\x000A\x00\x00\xc0@'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp571
(dp572
g535
(dp573
g524
I01
sg23
I01
sg22
I01
sg21
I00
sg531
I01
ssg537
g558
sg538
(lp574
g524
ag531
ag21
ag22
ag23
asg540
(lp575
I18
aI1
asbsg542
S'random'
p576
sg544
g545
(g527
(I0
tS'b'
tRp577
(I1
(I18
I1
tg77
I01
S'\t\x00\x00\x00\x0c\x00\x00\x00\x08\x00\x00\x00\r\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\x05\x00\x00\x00\x0b\x00\x00\x00\x0f\x00\x00\x00\x07\x00\x00\x00\x10\x00\x00\x00\x06\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\n\x00\x00\x00\x0e\x00\x00\x00'
tbsg547
I01
sg548
I1
sg549
I-1
sg550
(lp578
g1
(g514
g515
(dp579
g57
g75
sg56
g108
sg58
g105
sg59
g67
sg60
g107
sg61
g113
stRp580
ag1
(g514
g515
(dp581
g57
g75
sg56
g108
sg58
g105
sg59
g122
sg60
g107
sg61
g113
stRp582
ag1
(g514
g515
(dp583
g57
g75
sg56
g108
sg58
g105
sg59
g106
sg60
g107
sg61
g113
stRp584
ag1
(g514
g515
(dp585
g57
g95
sg56
g107
sg58
g105
sg59
g67
sg60
g108
sg61
g113
stRp586
ag1
(g514
g515
(dp587
g57
g95
sg56
g107
sg58
g105
sg59
g122
sg60
g108
sg61
g113
stRp588
ag1
(g514
g515
(dp589
g57
g95
sg56
g107
sg58
g105
sg59
g106
sg60
g108
sg61
g113
stRp590
ag1
(g514
g515
(dp591
g57
g111
sg56
g105
sg58
g107
sg59
g67
sg60
g108
sg61
g113
stRp592
ag1
(g514
g515
(dp593
g57
g111
sg56
g105
sg58
g107
sg59
g122
sg60
g108
sg61
g113
stRp594
ag1
(g514
g515
(dp595
g57
g111
sg56
g105
sg58
g107
sg59
g106
sg60
g108
sg61
g113
stRp596
ag1
(g514
g515
(dp597
g57
g75
sg56
g65
sg58
g69
sg59
g67
sg60
g70
sg61
g80
stRp598
ag1
(g514
g515
(dp599
g57
g75
sg56
g65
sg58
g69
sg59
g122
sg60
g70
sg61
g80
stRp600
ag1
(g514
g515
(dp601
g57
g75
sg56
g65
sg58
g69
sg59
g106
sg60
g70
sg61
g80
stRp602
ag1
(g514
g515
(dp603
g57
g95
sg56
g70
sg58
g69
sg59
g67
sg60
g65
sg61
g80
stRp604
ag1
(g514
g515
(dp605
g57
g95
sg56
g70
sg58
g69
sg59
g122
sg60
g65
sg61
g80
stRp606
ag1
(g514
g515
(dp607
g57
g95
sg56
g70
sg58
g69
sg59
g106
sg60
g65
sg61
g80
stRp608
ag1
(g514
g515
(dp609
g57
g111
sg56
g69
sg58
g70
sg59
g67
sg60
g65
sg61
g80
stRp610
ag1
(g514
g515
(dp611
g57
g111
sg56
g69
sg58
g70
sg59
g122
sg60
g65
sg61
g80
stRp612
ag1
(g514
g515
(dp613
g57
g111
sg56
g69
sg58
g70
sg59
g106
sg60
g65
sg61
g80
stRp614
asg552
Nsg553
g283
sg554
I18
sg555
I0
sg556
I18
sg557
I01
sbag1
(g508
g3
NtRp615
(dp616
g511
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="MTS - OtM 3x3" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trial_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import random&#10;&#10;# Declare variable for pass/fail training&#10;passed_training = False" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Set target stimuli categories &#10;# Location of the required category is set by the required response. &#10;# Location of the two incorrect categories is randomised.&#10;if required_response == 'left':  # left from block_layout.xlsx&#10;    target_category_left = target_category_required  # latter from block_layout.xlsx&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_middle = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'down':&#10;    target_category_middle = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'right':&#10;    target_category_right = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_middle = i.pop()&#10;&#10;# Set specific stimuli based on categories&#10;# Translate a1 etc into actual exemplars from the stimuli.xlsx file&#10;#sample&#10;if sample_category == 'a1':&#10;    sample = a1_exemplar&#10;elif sample_category == 'a2':&#10;    sample = a2_exemplar&#10;elif sample_category == 'a3':&#10;    sample = a3_exemplar&#10;elif sample_category == 'b1':  # I include B and C classes for generalisation to an equivalence task&#10;    sample = b1_exemplar&#10;elif sample_category == 'b2':&#10;    sample = b2_exemplar&#10;elif sample_category == 'b3':&#10;    sample = b3_exemplar&#10;elif sample_category == 'c1':&#10;    sample = c1_exemplar&#10;elif sample_category == 'c2':&#10;    sample = c2_exemplar&#10;elif sample_category == 'c3':&#10;    sample = c3_exemplar&#10;&#10;#target left&#10;if target_category_left == 'b1':&#10;    target_left = b1_exemplar&#10;elif target_category_left == 'b2':&#10;    target_left = b2_exemplar&#10;elif target_category_left == 'b3':&#10;    target_left = b3_exemplar&#10;elif target_category_left == 'c1':&#10;    target_left = c1_exemplar&#10;elif target_category_left == 'c2':&#10;    target_left = c2_exemplar&#10;elif target_category_left == 'c3':&#10;    target_left = c3_exemplar&#10;&#10;#target middle&#10;if target_category_middle == 'b1':&#10;    target_middle = b1_exemplar&#10;elif target_category_middle == 'b2':&#10;    target_middle = b2_exemplar&#10;elif target_category_middle == 'b3':&#10;    target_middle = b3_exemplar&#10;elif target_category_middle == 'c1':&#10;    target_middle = c1_exemplar&#10;elif target_category_middle == 'c2':&#10;    target_middle = c2_exemplar&#10;elif target_category_middle == 'c3':&#10;    target_middle = c3_exemplar&#10;&#10;#target right&#10;if target_category_right == 'b1':&#10;    target_right = b1_exemplar&#10;elif target_category_right == 'b2':&#10;    target_right = b2_exemplar&#10;elif target_category_right == 'b3':&#10;    target_right = b3_exemplar&#10;elif target_category_right == 'c1':&#10;    target_right = c1_exemplar&#10;elif target_category_right == 'c2':&#10;    target_right = c2_exemplar&#10;elif target_category_right == 'c3':&#10;    target_right = c3_exemplar&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# Adjust feedback and counters based on response&#10;if response.corr == True:&#10;    message = 'Correct'&#10;    message_color = 'lime'&#10;    correct_in_a_row += 1  # advance counter&#10;elif response.corr == False:&#10;    message = 'Wrong'&#10;    message_color = 'red'&#10;    correct_in_a_row = 0  # reset counter&#10;&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    passed_training = True&#10;&#10;# save variables to the experiment handler to be written to the data file&#10;thisExp.addData('sample', sample)&#10;thisExp.addData('target_left', target_left)&#10;thisExp.addData('target_middle', target_middle)&#10;thisExp.addData('target_right', target_right)&#10;thisExp.addData('correct_in_a_row', correct_in_a_row)&#10;thisExp.addData('passed_training', passed_training)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="sample_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="sample_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$sample" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_left_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_left_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_middle_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_middle_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_middle" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_right_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_right_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="response">\u000a        <Param name="correctAns" val="$required_response" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'left', 'down', 'right'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <CodeComponent name="end_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# adjust end message&#10;if passed_training == True:&#10;    end_message = 'PASSED \u005cn\u005cnEnd of task'&#10;elif passed_training == False:&#10;    end_message = 'FAILED \u005cn\u005cnEnd of task'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <TextComponent name="feedback_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$message_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="postblock">\u000a      <CodeComponent name="postblock_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="postblock_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# End loops if mastery criterion was met&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    blocks_loop.finished = True&#10;    trials_loop.finished = True&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# reset counter&#10;correct_in_a_row = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="inst_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="inst_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Learn to respond correctly to the words presented on screen. &#10;&#10;Use the up (left word), down (middle word), and right (right word) keys.&#10;&#10;Press any key to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="inst_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="inst_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks_loop">\u000a      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="12" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'a1': u'CUG', u'a3': u'PIM', u'a2': u'VEK', u'b1': u'DEV', u'b2': u'BRU', u'b3': u'IKA', u'c3': u'ORT', u'c2': u'TIV', u'c1': u'NAR'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_loop">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'target_middle': u'b3', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b1', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b2', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'c3', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c1', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c2', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c3', u'target_left': u'c2'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_loop"/>\u000a    <Routine name="postblock"/>\u000a    <LoopTerminator name="blocks_loop"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p617
sg513
(lp618
sg518
I217074736
sg11
g562
sg6
g7
sg520
I1
sg24
I01
sg25
g26
sg521
g1
(g522
g515
(dp619
g524
g525
(g526
g527
g528
S'b'
tRp620
(I1
(I18
I1
tg530
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg21
g545
(g527
(I0
tS'b'
tRp621
(I1
(I18
I1
tg566
I00
(lp622
g488
ag400
ag304
ag499
ag455
ag477
ag317
ag466
ag411
ag389
ag333
ag444
ag367
ag356
ag433
ag344
ag378
ag422
atbsg22
g525
(g526
g527
g528
S'b'
tRp623
(I1
(I18
I1
tg530
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg23
g525
(g526
g527
g528
S'b'
tRp624
(I1
(I18
I1
tg530
I00
S"\xa8\xe2\x1a?\xb4\xea\x1e?$\x98\x1a?\xd6\xa3\x9c?\xa0~t?Xcp?\x94x\r?\x06\x9b\x80?4\xa4R?\xdc\x94'?\x90+A?\xc8\xa9\x11?\xc0K8?\xf6\x0b\x94?\x88x_?LP_?\xc0E'?h\x86t?"
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg531
g525
(g526
g527
g528
S'b'
tRp625
(I1
(I18
I1
tg530
I00
S'\x00\x00\x80A\x00\x00\x00A\x00\x00\x00\x00\x00\x00\x88A\x00\x00PA\x00\x00pA\x00\x00\x80?\x00\x00`A\x00\x00\x10A\x00\x00\xe0@\x00\x00\x00@\x00\x00@A\x00\x00\xa0@\x00\x00\x80@\x00\x000A\x00\x00@@\x00\x00\xc0@\x00\x00 A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp626
(dp627
g535
(dp628
g524
I01
sg23
I01
sg22
I01
sg21
I00
sg531
I01
ssg537
g615
sg538
(lp629
g524
ag531
ag21
ag22
ag23
asg540
(lp630
I18
aI1
asbsg542
g576
sg544
g545
(g527
(I0
tS'b'
tRp631
(I1
(I18
I1
tg77
I01
S'\x02\x00\x00\x00\x06\x00\x00\x00\n\x00\x00\x00\x0f\x00\x00\x00\r\x00\x00\x00\x0c\x00\x00\x00\x10\x00\x00\x00\t\x00\x00\x00\x01\x00\x00\x00\x08\x00\x00\x00\x11\x00\x00\x00\x0e\x00\x00\x00\x0b\x00\x00\x00\x04\x00\x00\x00\x07\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00'
tbsg547
I01
sg548
I1
sg549
I-1
sg550
(lp632
g1
(g514
g515
(dp633
g298
g299
sg288
g289
sg292
g293
sg290
g312
sg294
g295
sg302
g303
stRp634
ag1
(g514
g515
(dp635
g298
g299
sg288
g289
sg292
g293
sg290
g326
sg294
g295
sg302
g303
stRp636
ag1
(g514
g515
(dp637
g298
g299
sg288
g289
sg292
g293
sg290
g291
sg294
g295
sg302
g303
stRp638
ag1
(g514
g515
(dp639
g298
g354
sg288
g295
sg292
g293
sg290
g312
sg294
g289
sg302
g303
stRp640
ag1
(g514
g515
(dp641
g298
g354
sg288
g295
sg292
g293
sg290
g326
sg294
g289
sg302
g303
stRp642
ag1
(g514
g515
(dp643
g298
g354
sg288
g295
sg292
g293
sg290
g291
sg294
g289
sg302
g303
stRp644
ag1
(g514
g515
(dp645
g298
g315
sg288
g293
sg292
g295
sg290
g312
sg294
g289
sg302
g303
stRp646
ag1
(g514
g515
(dp647
g298
g315
sg288
g293
sg292
g295
sg290
g326
sg294
g289
sg302
g303
stRp648
ag1
(g514
g515
(dp649
g298
g315
sg288
g293
sg292
g295
sg290
g291
sg294
g289
sg302
g303
stRp650
ag1
(g514
g515
(dp651
g298
g299
sg288
g325
sg292
g327
sg290
g312
sg294
g328
sg302
g332
stRp652
ag1
(g514
g515
(dp653
g298
g299
sg288
g325
sg292
g327
sg290
g326
sg294
g328
sg302
g332
stRp654
ag1
(g514
g515
(dp655
g298
g299
sg288
g325
sg292
g327
sg290
g291
sg294
g328
sg302
g332
stRp656
ag1
(g514
g515
(dp657
g298
g354
sg288
g328
sg292
g327
sg290
g312
sg294
g325
sg302
g332
stRp658
ag1
(g514
g515
(dp659
g298
g354
sg288
g328
sg292
g327
sg290
g326
sg294
g325
sg302
g332
stRp660
ag1
(g514
g515
(dp661
g298
g354
sg288
g328
sg292
g327
sg290
g291
sg294
g325
sg302
g332
stRp662
ag1
(g514
g515
(dp663
g298
g315
sg288
g327
sg292
g328
sg290
g312
sg294
g325
sg302
g332
stRp664
ag1
(g514
g515
(dp665
g298
g315
sg288
g327
sg292
g328
sg290
g326
sg294
g325
sg302
g332
stRp666
ag1
(g514
g515
(dp667
g298
g315
sg288
g327
sg292
g328
sg290
g291
sg294
g325
sg302
g332
stRp668
asg552
Nsg553
g502
sg554
I18
sg555
I0
sg556
I18
sg557
I01
sbasS'savePickle'
p669
I00
sb.