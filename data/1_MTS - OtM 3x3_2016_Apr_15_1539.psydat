ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/Dropbox/Work/Studies/Analysis of Rt data/PI probabalistic index/Training and testing for PI/Measures/One to three MTS 0.4/MTS - OtM 3x3.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/Dropbox/Work/Studies/Analysis of Rt data/PI probabalistic index/Training and testing for PI/Measures/One to three MTS 0.4/data/1_MTS - OtM 3x3_2016_Apr_15_1539
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'MTS - OtM 3x3'
p12
sS'dataNames'
p13
(lp14
S'saple'
p15
aS'target_left'
p16
aS'target_middle'
p17
aS'target_right'
p18
aS'correct_in_a_row'
p19
aS'response.keys'
p20
aS'response.corr'
p21
aS'response.rt'
p22
asS'autoLog'
p23
I01
sS'extraInfo'
p24
(dp25
Vparticipant
p26
V1
sVgender
p27
V
sVage
p28
V
sS'frameRate'
p29
cnumpy.core.multiarray
scalar
p30
(cnumpy
dtype
p31
(S'f8'
I0
I1
tRp32
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xde\x86\x04&^\xc4M@'
tRp33
sS'expName'
p34
g12
sS'date'
p35
V2016_Apr_15_1539
p36
ssS'loopsUnfinished'
p37
(lp38
g1
(cpsychopy.data
TrialHandler
p39
g3
NtRp40
(dp41
S'origin'
p42
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[800, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="MTS - OtM 3x3" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trial_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import random&#10;&#10;# Declare variable for pass/fail training&#10;passed_training = False" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Set target stimuli categories &#10;# Location of the required category is set by the required response. &#10;# Location of the two incorrect categories is randomised.&#10;if required_response == 'left':  # left from block_layout.xlsx&#10;    target_category_left = target_category_required  # latter from block_layout.xlsx&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_middle = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'down':&#10;    target_category_middle = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'right':&#10;    target_category_right = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_middle = i.pop()&#10;&#10;# Set specific stimuli based on categories&#10;# Translate a1 etc into actual exemplars from the stimuli.xlsx file&#10;#sample&#10;if sample_category == 'a1':&#10;    sample = a1_exemplar&#10;elif sample_category == 'a2':&#10;    sample = a2_exemplar&#10;elif sample_category == 'a3':&#10;    sample = a3_exemplar&#10;elif sample_category == 'b1':  # I include B and C classes for generalisation to an equivalence task&#10;    sample = b1_exemplar&#10;elif sample_category == 'b2':&#10;    sample = b2_exemplar&#10;elif sample_category == 'b3':&#10;    sample = b3_exemplar&#10;elif sample_category == 'c1':&#10;    sample = c1_exemplar&#10;elif sample_category == 'c2':&#10;    sample = c2_exemplar&#10;elif sample_category == 'c3':&#10;    sample = c3_exemplar&#10;&#10;#target left&#10;if target_category_left == 'b1':&#10;    target_left = b1_exemplar&#10;elif target_category_left == 'b2':&#10;    target_left = b2_exemplar&#10;elif target_category_left == 'b3':&#10;    target_left = b3_exemplar&#10;elif target_category_left == 'c1':&#10;    target_left = c1_exemplar&#10;elif target_category_left == 'c2':&#10;    target_left = c2_exemplar&#10;elif target_category_left == 'c3':&#10;    target_left = c3_exemplar&#10;&#10;#target middle&#10;if target_category_middle == 'b1':&#10;    target_middle = b1_exemplar&#10;elif target_category_middle == 'b2':&#10;    target_middle = b2_exemplar&#10;elif target_category_middle == 'b3':&#10;    target_middle = b3_exemplar&#10;elif target_category_middle == 'c1':&#10;    target_middle = c1_exemplar&#10;elif target_category_middle == 'c2':&#10;    target_middle = c2_exemplar&#10;elif target_category_middle == 'c3':&#10;    target_middle = c3_exemplar&#10;&#10;#target right&#10;if target_category_right == 'b1':&#10;    target_right = b1_exemplar&#10;elif target_category_right == 'b2':&#10;    target_right = b2_exemplar&#10;elif target_category_right == 'b3':&#10;    target_right = b3_exemplar&#10;elif target_category_right == 'c1':&#10;    target_right = c1_exemplar&#10;elif target_category_right == 'c2':&#10;    target_right = c2_exemplar&#10;elif target_category_right == 'c3':&#10;    target_right = c3_exemplar&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# Adjust feedback and counters based on response&#10;if response.corr == True:&#10;    message = 'Correct'&#10;    message_color = 'lime'&#10;    correct_in_a_row += 1  # advance counter&#10;elif response.corr == False:&#10;    message = 'Wrong'&#10;    message_color = 'red'&#10;    correct_in_a_row = 0  # reset counter&#10;&#10;# End loops if mastery criterion was met&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    passed_training = True&#10;    blocks_loop.finished = True&#10;    trials_loop.finished = True&#10;&#10;# save the stimuli presented to the experiment handler to be written to the data file&#10;thisExp.addData('saple', sample)&#10;thisExp.addData('target_left', target_left)&#10;thisExp.addData('target_middle', target_middle)&#10;thisExp.addData('target_right', target_right)&#10;thisExp.addData('correct_in_a_row', correct_in_a_row)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="sample_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="sample_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$sample" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_left_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_left_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_middle_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_middle_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_middle" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_right_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_right_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="response">\u000a        <Param name="correctAns" val="$required_response" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'left', 'down', 'right'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <CodeComponent name="end_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# adjust end message&#10;if passed_training == True:&#10;    end_message = 'PASSED \u005cn\u005cnEnd of task'&#10;elif passed_training == False:&#10;    end_message = 'FAILED \u005cn\u005cnEnd of task'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <TextComponent name="feedback_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$message_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# reset counter&#10;correct_in_a_row = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="inst_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="inst_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Learn to respond correctly to the words presented on screen. &#10;&#10;Use the up (left word), down (middle word), and right (right word) keys.&#10;&#10;Press any key to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="inst_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="inst_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks_loop">\u000a      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="12" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'a1': u'CUG', u'a3': u'PIM', u'a2': u'VEK', u'b1': u'DEV', u'b2': u'BRU', u'b3': u'IKA', u'c3': u'ORT', u'c2': u'TIV', u'c1': u'NAR'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_loop">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'target_middle': u'b3', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b1', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b2', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'c3', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c1', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c2', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c3', u'target_left': u'c2'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_loop"/>\u000a    <LoopTerminator name="blocks_loop"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p43
sS'thisTrial'
p44
g1
(cpsychopy.data
TrialType
p45
c__builtin__
dict
p46
(dp47
Vc1_exemplar
p48
VC1
p49
sVb1_exemplar
p50
VB1
p51
sVa1_exemplar
p52
VA1
p53
sVc2_exemplar
p54
VC2
p55
sVc3_exemplar
p56
VC3
p57
sVa2_exemplar
p58
VA2
p59
sVmastery_criterion
p60
I15
sVb3_exemplar
p61
VB3
p62
sVa3_exemplar
p63
VA3
p64
sVb2_exemplar
p65
VB2
p66
stRp67
sS'_exp'
p68
I215911088
sg11
S'blocks_loop'
p69
sg6
g7
sS'thisRepN'
p70
I0
sg23
I01
sg24
g25
sS'data'
p71
g1
(cpsychopy.data
DataHandler
p72
g46
(dp73
S'ran'
p74
cnumpy.ma.core
_mareconstruct
p75
(cnumpy.ma.core
MaskedArray
p76
cnumpy
ndarray
p77
(I0
tp78
S'b'
tRp79
(I1
(I1
I12
tg31
(S'f4'
I0
I1
tRp80
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbsS'order'
p81
g75
(g76
g77
g78
S'b'
tRp82
(I1
(I1
I12
tg80
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
NtbstRp83
(dp84
S'isNumeric'
p85
(dp86
g74
I01
sg81
I01
ssS'trials'
p87
g40
sS'dataTypes'
p88
(lp89
g74
ag81
asS'dataShape'
p90
(lp91
I1
aI12
asbsS'method'
p92
S'sequential'
p93
sS'sequenceIndices'
p94
cnumpy.core.multiarray
_reconstruct
p95
(g77
(I0
tS'b'
tRp96
(I1
(I1
I12
tg31
(S'i4'
I0
I1
tRp97
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
tbsS'finished'
p98
I00
sS'nReps'
p99
I12
sS'nRemaining'
p100
I11
sS'trialList'
p101
(lp102
g67
asS'seed'
p103
NsS'thisIndex'
p104
g30
(g97
S'\x00\x00\x00\x00'
tRp105
sS'thisN'
p106
I0
sS'thisTrialN'
p107
I0
sS'nTotal'
p108
I12
sS'_warnUseOfNext'
p109
I01
sbag1
(g39
g3
NtRp110
(dp111
g42
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="black" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[800, 600]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="False" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="MTS - OtM 3x3" valType="str" updates="None"/>\u000a    <Param name="logging level" val="exp" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trial_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import random&#10;&#10;# Declare variable for pass/fail training&#10;passed_training = False" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trial_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Set target stimuli categories &#10;# Location of the required category is set by the required response. &#10;# Location of the two incorrect categories is randomised.&#10;if required_response == 'left':  # left from block_layout.xlsx&#10;    target_category_left = target_category_required  # latter from block_layout.xlsx&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_middle = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'down':&#10;    target_category_middle = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_right = i.pop()&#10;elif required_response == 'right':&#10;    target_category_right = target_category_required&#10;    i = [target_category_wrong_1, target_category_wrong_2]&#10;    random.shuffle(i)&#10;    target_category_left = i.pop()&#10;    target_category_middle = i.pop()&#10;&#10;# Set specific stimuli based on categories&#10;# Translate a1 etc into actual exemplars from the stimuli.xlsx file&#10;#sample&#10;if sample_category == 'a1':&#10;    sample = a1_exemplar&#10;elif sample_category == 'a2':&#10;    sample = a2_exemplar&#10;elif sample_category == 'a3':&#10;    sample = a3_exemplar&#10;elif sample_category == 'b1':  # I include B and C classes for generalisation to an equivalence task&#10;    sample = b1_exemplar&#10;elif sample_category == 'b2':&#10;    sample = b2_exemplar&#10;elif sample_category == 'b3':&#10;    sample = b3_exemplar&#10;elif sample_category == 'c1':&#10;    sample = c1_exemplar&#10;elif sample_category == 'c2':&#10;    sample = c2_exemplar&#10;elif sample_category == 'c3':&#10;    sample = c3_exemplar&#10;&#10;#target left&#10;if target_category_left == 'b1':&#10;    target_left = b1_exemplar&#10;elif target_category_left == 'b2':&#10;    target_left = b2_exemplar&#10;elif target_category_left == 'b3':&#10;    target_left = b3_exemplar&#10;elif target_category_left == 'c1':&#10;    target_left = c1_exemplar&#10;elif target_category_left == 'c2':&#10;    target_left = c2_exemplar&#10;elif target_category_left == 'c3':&#10;    target_left = c3_exemplar&#10;&#10;#target middle&#10;if target_category_middle == 'b1':&#10;    target_middle = b1_exemplar&#10;elif target_category_middle == 'b2':&#10;    target_middle = b2_exemplar&#10;elif target_category_middle == 'b3':&#10;    target_middle = b3_exemplar&#10;elif target_category_middle == 'c1':&#10;    target_middle = c1_exemplar&#10;elif target_category_middle == 'c2':&#10;    target_middle = c2_exemplar&#10;elif target_category_middle == 'c3':&#10;    target_middle = c3_exemplar&#10;&#10;#target right&#10;if target_category_right == 'b1':&#10;    target_right = b1_exemplar&#10;elif target_category_right == 'b2':&#10;    target_right = b2_exemplar&#10;elif target_category_right == 'b3':&#10;    target_right = b3_exemplar&#10;elif target_category_right == 'c1':&#10;    target_right = c1_exemplar&#10;elif target_category_right == 'c2':&#10;    target_right = c2_exemplar&#10;elif target_category_right == 'c3':&#10;    target_right = c3_exemplar&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="# Adjust feedback and counters based on response&#10;if response.corr == True:&#10;    message = 'Correct'&#10;    message_color = 'lime'&#10;    correct_in_a_row += 1  # advance counter&#10;elif response.corr == False:&#10;    message = 'Wrong'&#10;    message_color = 'red'&#10;    correct_in_a_row = 0  # reset counter&#10;&#10;# End loops if mastery criterion was met&#10;if correct_in_a_row &gt;= mastery_criterion:&#10;    passed_training = True&#10;    blocks_loop.finished = True&#10;    trials_loop.finished = True&#10;&#10;# save the stimuli presented to the experiment handler to be written to the data file&#10;thisExp.addData('saple', sample)&#10;thisExp.addData('target_left', target_left)&#10;thisExp.addData('target_middle', target_middle)&#10;thisExp.addData('target_right', target_right)&#10;thisExp.addData('correct_in_a_row', correct_in_a_row)" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="sample_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="sample_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$sample" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_left_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_left_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_left" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_middle_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_middle_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_middle" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="target_right_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="target_right_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$target_right" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[.5, -.3]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="response">\u000a        <Param name="correctAns" val="$required_response" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'left', 'down', 'right'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <CodeComponent name="end_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="end_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# adjust end message&#10;if passed_training == True:&#10;    end_message = 'PASSED \u005cn\u005cnEnd of task'&#10;elif passed_training == False:&#10;    end_message = 'FAILED \u005cn\u005cnEnd of task'" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$end_message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="end_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="end_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'return'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="feedback">\u000a      <TextComponent name="feedback_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$message_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$message" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="1.0" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instructions">\u000a      <CodeComponent name="inst_code">\u000a        <Param name="Begin Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="inst_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# reset counter&#10;correct_in_a_row = 0" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="inst_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="inst_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="Learn to respond correctly to the words presented on screen. &#10;&#10;Use the up (left word), down (middle word), and right (right word) keys.&#10;&#10;Press any key to continue." valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="inst_resp">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="inst_resp" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.5" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks_loop">\u000a      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="12" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'a1': u'CUG', u'a3': u'PIM', u'a2': u'VEK', u'b1': u'DEV', u'b2': u'BRU', u'b3': u'IKA', u'c3': u'ORT', u'c2': u'TIV', u'c1': u'NAR'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instructions"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials_loop">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials_loop" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="random" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'target_middle': u'b3', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a1', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b1', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'b2', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a2', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b2', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'left', u'target_right': u'b1', u'target_left': u'b3'}, {u'target_middle': u'b3', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'down', u'target_right': u'b2', u'target_left': u'b1'}, {u'target_middle': u'b1', u'sample': u'a3', u'trial_description': u'ab', u'required_response': u'right', u'target_right': u'b3', u'target_left': u'b2'}, {u'target_middle': u'c3', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a1', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c1', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c3', u'target_left': u'c2'}, {u'target_middle': u'c2', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a2', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c2', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'left', u'target_right': u'c1', u'target_left': u'c3'}, {u'target_middle': u'c3', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'down', u'target_right': u'c2', u'target_left': u'c1'}, {u'target_middle': u'c1', u'sample': u'a3', u'trial_description': u'ac', u'required_response': u'right', u'target_right': u'c3', u'target_left': u'c2'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <Routine name="feedback"/>\u000a    <LoopTerminator name="trials_loop"/>\u000a    <LoopTerminator name="blocks_loop"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p112
sg44
g1
(g45
g46
(dp113
Vsample_category
p114
Va1
p115
sVtarget_category_required
p116
Vc1
p117
sVtarget_category_wrong_2
p118
Vc3
p119
sVrequired_response
p120
Vleft
p121
sVtarget_category_wrong_1
p122
Vc2
p123
sVtrial_description
p124
Vac
p125
stRp126
sg68
I215911088
sg11
S'trials_loop'
p127
sg6
g7
sg70
I0
sg23
I01
sg24
g25
sg71
g1
(g72
g46
(dp128
g74
g75
(g76
g77
g78
S'b'
tRp129
(I1
(I18
I1
tg80
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg20
g95
(g77
(I0
tS'b'
tRp130
(I1
(I18
I1
tg31
(S'O4'
I0
I1
tRp131
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp132
S'--'
p133
aS'--'
p134
aS'down'
p135
aS'left'
p136
aS'--'
p137
aS'--'
p138
aS'down'
p139
aS'--'
p140
aS'--'
p141
aS'--'
p142
aS'--'
p143
aS'down'
p144
aS'--'
p145
aS'--'
p146
aS'--'
p147
aS'left'
p148
aS'down'
p149
aS'left'
p150
atbsg21
g75
(g76
g77
g78
S'b'
tRp151
(I1
(I18
I1
tg80
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x00\x00\x01\x01\x00\x01\x01\x01\x01\x00\x01\x01\x01\x00\x00\x00'
Ntbsg22
g75
(g76
g77
g78
S'b'
tRp152
(I1
(I18
I1
tg80
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\xce\x17\x85?\x10wE?\x00\x00\x00\x00\x00\x00\x00\x00\x9cwp?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe4\xf6+?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00Ln\x0b@\xf0g\x00?,%\x87?'
S'\x01\x01\x00\x00\x01\x01\x00\x01\x01\x01\x01\x00\x01\x01\x01\x00\x00\x00'
Ntbsg81
g75
(g76
g77
g78
S'b'
tRp153
(I1
(I18
I1
tg80
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80@\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0@\x00\x00\x00\x00\x00\x00\x00@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0@\x00\x00@@'
S'\x01\x01\x00\x00\x01\x01\x00\x01\x01\x00\x01\x00\x01\x01\x01\x00\x00\x00'
NtbstRp154
(dp155
g85
(dp156
g74
I01
sg22
I01
sg21
I01
sg20
I00
sg81
I01
ssg87
g110
sg88
(lp157
g74
ag81
ag20
ag21
ag22
asg90
(lp158
I18
aI1
asbsg92
S'random'
p159
sg94
g95
(g77
(I0
tS'b'
tRp160
(I1
(I18
I1
tg97
I01
S'\x0f\x00\x00\x00\x03\x00\x00\x00\x0b\x00\x00\x00\x11\x00\x00\x00\x02\x00\x00\x00\x06\x00\x00\x00\x10\x00\x00\x00\t\x00\x00\x00\x0e\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\r\x00\x00\x00\x08\x00\x00\x00\x04\x00\x00\x00\x07\x00\x00\x00\x0c\x00\x00\x00'
tbsg98
I00
sg99
I1
sg100
I10
sg101
(lp161
g1
(g45
g46
(dp162
g114
g115
sg116
Vb1
p163
sg118
Vb3
p164
sg120
g121
sg122
Vb2
p165
sg124
Vab
p166
stRp167
ag1
(g45
g46
(dp168
g114
g115
sg116
g163
sg118
g164
sg120
Vright
p169
sg122
g165
sg124
g166
stRp170
ag1
(g45
g46
(dp171
g114
g115
sg116
g163
sg118
g164
sg120
Vdown
p172
sg122
g165
sg124
g166
stRp173
ag1
(g45
g46
(dp174
g114
Va2
p175
sg116
g165
sg118
g164
sg120
g121
sg122
g163
sg124
g166
stRp176
ag1
(g45
g46
(dp177
g114
g175
sg116
g165
sg118
g164
sg120
g169
sg122
g163
sg124
g166
stRp178
ag1
(g45
g46
(dp179
g114
g175
sg116
g165
sg118
g164
sg120
g172
sg122
g163
sg124
g166
stRp180
ag1
(g45
g46
(dp181
g114
Va3
p182
sg116
g164
sg118
g165
sg120
g121
sg122
g163
sg124
g166
stRp183
ag1
(g45
g46
(dp184
g114
g182
sg116
g164
sg118
g165
sg120
g169
sg122
g163
sg124
g166
stRp185
ag1
(g45
g46
(dp186
g114
g182
sg116
g164
sg118
g165
sg120
g172
sg122
g163
sg124
g166
stRp187
ag126
ag1
(g45
g46
(dp188
g114
g115
sg116
g117
sg118
g119
sg120
g169
sg122
g123
sg124
g125
stRp189
ag1
(g45
g46
(dp190
g114
g115
sg116
g117
sg118
g119
sg120
g172
sg122
g123
sg124
g125
stRp191
ag1
(g45
g46
(dp192
g114
g175
sg116
g123
sg118
g119
sg120
g121
sg122
g117
sg124
g125
stRp193
ag1
(g45
g46
(dp194
g114
g175
sg116
g123
sg118
g119
sg120
g169
sg122
g117
sg124
g125
stRp195
ag1
(g45
g46
(dp196
g114
g175
sg116
g123
sg118
g119
sg120
g172
sg122
g117
sg124
g125
stRp197
ag1
(g45
g46
(dp198
g114
g182
sg116
g119
sg118
g123
sg120
g121
sg122
g117
sg124
g125
stRp199
ag1
(g45
g46
(dp200
g114
g182
sg116
g119
sg118
g123
sg120
g169
sg122
g117
sg124
g125
stRp201
ag1
(g45
g46
(dp202
g114
g182
sg116
g119
sg118
g123
sg120
g172
sg122
g117
sg124
g125
stRp203
asg103
Nsg104
g30
(g97
S'\t\x00\x00\x00'
tRp204
sg106
I7
sg107
I7
sg108
I18
sg109
I01
sbasS'saveWideText'
p205
I01
sS'thisEntry'
p206
(dp207
sS'version'
p208
S''
sS'_paramNamesSoFar'
p209
(lp210
g48
ag50
ag52
ag54
ag56
ag58
ag60
ag61
ag63
ag65
ag116
ag114
ag118
ag120
ag122
ag124
asS'entries'
p211
(lp212
(dp213
g19
I1
sg116
g119
sg15
g64
sg35
g36
sg120
g121
sg61
g62
sg118
g123
sg122
g117
sg65
g66
sg16
g57
sg48
g49
sg52
g53
sg26
V1
sS'blocks_loop.thisRepN'
p214
I0
sg21
I1
sS'trials_loop.thisRepN'
p215
I0
sg114
g182
sS'blocks_loop.thisIndex'
p216
g105
sg22
F2.1786069869995117
sg124
g125
sg17
g49
sg50
g51
sg34
g12
sg20
g148
sg54
g55
sg29
g33
sg56
g57
sS'trials_loop.thisN'
p217
I0
sg60
I15
sg63
g64
sS'trials_loop.thisIndex'
p218
g30
(g97
S'\x0f\x00\x00\x00'
tRp219
sg27
V
sg28
V
sS'blocks_loop.thisN'
p220
I0
sS'blocks_loop.thisTrialN'
p221
I0
sS'trials_loop.thisTrialN'
p222
I0
sg58
g59
sg18
g55
sa(dp223
g19
I2
sg116
g165
sg15
g59
sg35
g36
sg120
g121
sg61
g62
sg118
g164
sg122
g163
sg65
g66
sg16
g66
sg48
g49
sg52
g53
sg26
V1
sS'blocks_loop.thisRepN'
p224
I0
sg21
I1
sS'trials_loop.thisRepN'
p225
I0
sg114
g175
sS'blocks_loop.thisIndex'
p226
g105
sg22
F0.77134799957275391
sg124
g166
sg17
g51
sg50
g51
sg34
g12
sg20
g136
sg54
g55
sg29
g33
sg56
g57
sS'trials_loop.thisN'
p227
I1
sg60
I15
sg63
g64
sS'trials_loop.thisIndex'
p228
g30
(g97
S'\x03\x00\x00\x00'
tRp229
sg27
V
sg28
V
sS'blocks_loop.thisN'
p230
I0
sS'blocks_loop.thisTrialN'
p231
I0
sS'trials_loop.thisTrialN'
p232
I1
sg58
g59
sg18
g62
sa(dp233
g19
I3
sg116
g117
sg15
g53
sg35
g36
sg120
g172
sg61
g62
sg118
g119
sg122
g123
sg65
g66
sg16
g57
sg48
g49
sg52
g53
sg26
V1
sS'blocks_loop.thisRepN'
p234
I0
sg21
I1
sS'trials_loop.thisRepN'
p235
I0
sg114
g115
sS'blocks_loop.thisIndex'
p236
g105
sg22
F0.67173600196838379
sg124
g125
sg17
g49
sg50
g51
sg34
g12
sg20
g144
sg54
g55
sg29
g33
sg56
g57
sS'trials_loop.thisN'
p237
I2
sg60
I15
sg63
g64
sS'trials_loop.thisIndex'
p238
g30
(g97
S'\x0b\x00\x00\x00'
tRp239
sg27
V
sg28
V
sS'blocks_loop.thisN'
p240
I0
sS'blocks_loop.thisTrialN'
p241
I0
sS'trials_loop.thisTrialN'
p242
I2
sg58
g59
sg18
g55
sa(dp243
g19
I0
sg116
g119
sg15
g64
sg35
g36
sg120
g172
sg61
g62
sg118
g123
sg122
g117
sg65
g66
sg16
g49
sg48
g49
sg52
g53
sg26
V1
sS'blocks_loop.thisRepN'
p244
I0
sg21
I0
sS'trials_loop.thisRepN'
p245
I0
sg114
g182
sS'blocks_loop.thisIndex'
p246
g105
sg22
F1.0558218955993652
sg124
g125
sg17
g57
sg50
g51
sg34
g12
sg20
g150
sg54
g55
sg29
g33
sg56
g57
sS'trials_loop.thisN'
p247
I3
sg60
I15
sg63
g64
sS'trials_loop.thisIndex'
p248
g30
(g97
S'\x11\x00\x00\x00'
tRp249
sg27
V
sg28
V
sS'blocks_loop.thisN'
p250
I0
sS'blocks_loop.thisTrialN'
p251
I0
sS'trials_loop.thisTrialN'
p252
I3
sg58
g59
sg18
g55
sa(dp253
g19
I1
sg116
g163
sg15
g53
sg35
g36
sg120
g172
sg61
g62
sg118
g164
sg122
g165
sg65
g66
sg16
g62
sg48
g49
sg52
g53
sg26
V1
sS'blocks_loop.thisRepN'
p254
I0
sg21
I1
sS'trials_loop.thisRepN'
p255
I0
sg114
g115
sS'blocks_loop.thisIndex'
p256
g105
sg22
F1.0397889614105225
sg124
g166
sg17
g51
sg50
g51
sg34
g12
sg20
g135
sg54
g55
sg29
g33
sg56
g57
sS'trials_loop.thisN'
p257
I4
sg60
I15
sg63
g64
sS'trials_loop.thisIndex'
p258
g30
(g97
S'\x02\x00\x00\x00'
tRp259
sg27
V
sg28
V
sS'blocks_loop.thisN'
p260
I0
sS'blocks_loop.thisTrialN'
p261
I0
sS'trials_loop.thisTrialN'
p262
I4
sg58
g59
sg18
g66
sa(dp263
g19
I0
sg116
g164
sg15
g64
sg35
g36
sg120
g121
sg61
g62
sg118
g165
sg122
g163
sg65
g66
sg16
g62
sg48
g49
sg52
g53
sg26
V1
sS'blocks_loop.thisRepN'
p264
I0
sg21
I0
sS'trials_loop.thisRepN'
p265
I0
sg114
g182
sS'blocks_loop.thisIndex'
p266
g105
sg22
F0.93932509422302246
sg124
g166
sg17
g66
sg50
g51
sg34
g12
sg20
g139
sg54
g55
sg29
g33
sg56
g57
sS'trials_loop.thisN'
p267
I5
sg60
I15
sg63
g64
sS'trials_loop.thisIndex'
p268
g30
(g97
S'\x06\x00\x00\x00'
tRp269
sg27
V
sg28
V
sS'blocks_loop.thisN'
p270
I0
sS'blocks_loop.thisTrialN'
p271
I0
sS'trials_loop.thisTrialN'
p272
I5
sg58
g59
sg18
g51
sa(dp273
g19
I0
sg116
g119
sg15
g64
sg35
g36
sg120
g169
sg61
g62
sg118
g123
sg122
g117
sg65
g66
sg16
g55
sg48
g49
sg52
g53
sg26
V1
sS'blocks_loop.thisRepN'
p274
I0
sg21
I0
sS'trials_loop.thisRepN'
p275
I0
sg114
g182
sS'blocks_loop.thisIndex'
p276
g105
sg22
F0.50158596038818359
sg124
g125
sg17
g49
sg50
g51
sg34
g12
sg20
g149
sg54
g55
sg29
g33
sg56
g57
sS'trials_loop.thisN'
p277
I6
sg60
I15
sg63
g64
sS'trials_loop.thisIndex'
p278
g30
(g97
S'\x10\x00\x00\x00'
tRp279
sg27
V
sg28
V
sS'blocks_loop.thisN'
p280
I0
sS'blocks_loop.thisTrialN'
p281
I0
sS'trials_loop.thisTrialN'
p282
I6
sg58
g59
sg18
g57
sasS'loops'
p283
(lp284
g40
ag110
asS'savePickle'
p285
I00
sb.